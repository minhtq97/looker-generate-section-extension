{"version":3,"file":"apiMethods.js","names":["_transport","require","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","err","undefined","obj","_toPropertyKey","configurable","writable","i","_toPrimitive","String","Symbol","toPrimitive","call","TypeError","Number","functionalSdk","authSession","apiVersion","sdkVersion","sdk","APIMethods","apiPath","settings","base_url","exports","constructor","agentTag","concat","agentPrefix","_apiPath","Error","_apiVersion","create","type","ok","promise","sdkOk","makePath","path","options","authenticator","match","base","authRequest","method","queryParams","body","_this","init","authenticate","transport","request","authStream","callback","_this2","stream","get","_this3","head","_this4","delete","_this5","post","_this6","put","_this7","patch","_this8"],"sources":["../src/apiMethods.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport type {\n  Authenticator,\n  HttpMethod,\n  IAPIMethods,\n  ITransportSettings,\n  SDKResponse,\n  Values,\n} from './transport';\nimport { agentPrefix, sdkOk } from './transport';\nimport type { IAuthSession } from './authSession';\n\n/**\n * Creates an \"sdk\" to be used with the TypeScript SDK's funcs.ts file\n * @param authSession authentication session\n * @param apiVersion version of API to use (e.g. \"4.0\")\n * @param sdkVersion Looker release version (e.g. \"21.4\")\n */\nexport const functionalSdk = (\n  authSession: IAuthSession,\n  apiVersion: string,\n  sdkVersion: string\n) => {\n  const sdk = new APIMethods(authSession, sdkVersion);\n  sdk.apiVersion = apiVersion;\n  sdk.apiPath =\n    authSession.settings.base_url === ''\n      ? ''\n      : authSession.settings.base_url + '/api/' + apiVersion;\n  return sdk;\n};\n\nexport class APIMethods implements IAPIMethods {\n  private _apiPath = '';\n  private _apiVersion = '';\n\n  /**\n   * Initialize the APIMethods wrapper\n   * @param authSession authentication management session\n   * @param sdkVersion version of the SDK for agent tagging\n   */\n  constructor(public authSession: IAuthSession, public sdkVersion: string) {\n    if (\n      !('agentTag' in authSession.settings && authSession.settings.agentTag)\n    ) {\n      // Initialize agentTag if it's not already explicitly set\n      authSession.settings.agentTag = `${agentPrefix} ${sdkVersion}`;\n    }\n  }\n\n  get apiPath() {\n    return this._apiPath;\n  }\n\n  set apiPath(value: string) {\n    if (this._apiPath) {\n      throw new Error(\n        `API Path is set to \"${this._apiPath}\" and cannot be reassigned`\n      );\n    }\n    this._apiPath = value;\n  }\n\n  get apiVersion() {\n    return this._apiVersion;\n  }\n\n  set apiVersion(value: string) {\n    // API version can only be set once for the instance\n    if (this._apiVersion) {\n      throw new Error(\n        `API Version is set to \"${this._apiVersion}\" and cannot be reassigned`\n      );\n    }\n    this._apiVersion = value;\n  }\n\n  /** A helper method for constructing with a type as a param\n   *\n   * Example:\n   *   APIMethods.create(Looker40SDK, authSession)\n   *\n   * @param type\n   * @param authSession\n   */\n  static create<T extends APIMethods>(\n    type: new (authSession: IAuthSession) => T,\n    authSession: IAuthSession\n  ): T {\n    // eslint-disable-next-line new-cap\n    return new type(authSession);\n  }\n\n  /** A helper method for simplifying error handling of SDK responses.\n   *\n   * Pass in a promise returned by any SDK method, and it will return a promise\n   * that rejects if the `SDKResponse` is not `ok`. This will swallow the type\n   * information in the error case, but allows you to route all the error cases\n   * into a single promise rejection.\n   *\n   * The promise will have an `Error` rejection reason with a string `message`.\n   * If the server error contains a `message` field, it will be provided, otherwise a\n   * generic message will occur.\n   *\n   * ```ts\n   * const sdk = LookerSDK({...})\n   * let look\n   * try {\n   *    look = await sdk.ok(sdk.create_look({...}))\n   *    // do something with look\n   * }\n   * catch(e) {\n   *    // handle error case\n   * }\n   * ```\n   */\n  async ok<TSuccess, TError>(promise: Promise<SDKResponse<TSuccess, TError>>) {\n    return sdkOk<TSuccess, TError>(promise);\n  }\n\n  /**\n   * Determine whether the url should be an API path, relative from base_url, or is already fully specified override\n   * @param path Request path\n   * @param options Transport settings\n   * @param authenticator optional callback\n   * @returns the fully specified request path including any query string parameters\n   */\n  makePath(\n    path: string,\n    options: Partial<ITransportSettings>,\n    authenticator?: Authenticator\n  ) {\n    if (path.match(/^(http:\\/\\/|https:\\/\\/)/gi)) return path;\n    // is this an API-versioned call?\n    const base = authenticator ? this.apiPath : options.base_url;\n    return `${base}${path}`; // path was relative\n  }\n\n  /**\n   *\n   * A helper method to add authentication to an API request for deserialization\n   *\n   * @param {HttpMethod} method type of HTTP method\n   * @param {string} path API endpoint path\n   * @param {any} queryParams Optional query params collection for request\n   * @param {any} body Optional body for request\n   * @param {Partial<ITransportSettings>} options Optional overrides like timeout and verify_ssl\n   */\n  async authRequest<TSuccess, TError>(\n    method: HttpMethod,\n    path: string,\n    queryParams?: Values,\n    body?: any,\n    options?: Partial<ITransportSettings>\n  ): Promise<SDKResponse<TSuccess, TError>> {\n    options = { ...this.authSession.settings, ...options };\n    const authenticator = (init: any) => {\n      return this.authSession.authenticate(init);\n    };\n    path = this.makePath(path, options, authenticator);\n    return this.authSession.transport.request<TSuccess, TError>(\n      method,\n      path,\n      queryParams,\n      body,\n      authenticator,\n      options\n    );\n  }\n\n  /**\n   * A helper method to add authentication to an API request for streaming\n   * @param callback for streaming\n   * @param method of HTTP request\n   * @param path HTTP path\n   * @param queryParams\n   * @param body\n   * @param options to override\n   */\n  async authStream<T>(\n    callback: (response: Response) => Promise<T>,\n    method: HttpMethod,\n    path: string,\n    queryParams?: Values,\n    body?: any,\n    options?: Partial<ITransportSettings>\n  ): Promise<T> {\n    options = { ...this.authSession.settings, ...options };\n    const authenticator = (init: any) => {\n      return this.authSession.authenticate(init);\n    };\n    path = this.makePath(path, options, authenticator);\n    return this.authSession.transport.stream<T>(\n      callback,\n      method,\n      path,\n      queryParams,\n      body,\n      (init: any) => {\n        return this.authSession.authenticate(init);\n      },\n      options\n    );\n  }\n\n  // // dynamically evaluate a template string\n  // macro(template: string, vars: any) {\n  //   // replace {foo} from spec path with ${foo} for template string\n  //   template = template.replace(/{/gi, '${')\n  //   return new Function('return `+ template +`;').call(vars)\n  // }\n  //\n  // pathify(path: string, pathParams?: any) {\n  //   if (!pathParams) return path\n  //   if (path.indexOf('{') < 0) return path\n  //   return this.macro(path, pathParams)\n  // }\n\n  /** Make a GET request */\n  async get<TSuccess, TError>(\n    path: string,\n    queryParams?: Values,\n    body?: any,\n    options?: Partial<ITransportSettings>\n  ): Promise<SDKResponse<TSuccess, TError>> {\n    return this.authRequest<TSuccess, TError>(\n      'GET',\n      path,\n      queryParams,\n      body,\n      options\n    );\n  }\n\n  /** Make a HEAD request */\n  async head<TSuccess, TError>(\n    path: string,\n    queryParams?: Values,\n    body?: any,\n    options?: Partial<ITransportSettings>\n  ): Promise<SDKResponse<TSuccess, TError>> {\n    return this.authRequest<TSuccess, TError>(\n      'HEAD',\n      path,\n      queryParams,\n      body,\n      options\n    );\n  }\n\n  /** Make a DELETE request */\n  async delete<TSuccess, TError>(\n    path: string,\n    queryParams?: Values,\n    body?: any,\n    options?: Partial<ITransportSettings>\n  ): Promise<SDKResponse<TSuccess, TError>> {\n    return this.authRequest<TSuccess, TError>(\n      'DELETE',\n      path,\n      queryParams,\n      body,\n      options\n    );\n  }\n\n  /** Make a POST request */\n  async post<TSuccess, TError>(\n    path: string,\n    queryParams?: Values,\n    body?: any,\n    options?: Partial<ITransportSettings>\n  ): Promise<SDKResponse<TSuccess, TError>> {\n    return this.authRequest<TSuccess, TError>(\n      'POST',\n      path,\n      queryParams,\n      body,\n      options\n    );\n  }\n\n  /** Make a PUT request */\n  async put<TSuccess, TError>(\n    path: string,\n    queryParams?: Values,\n    body?: any,\n    options?: Partial<ITransportSettings>\n  ): Promise<SDKResponse<TSuccess, TError>> {\n    return this.authRequest<TSuccess, TError>(\n      'PUT',\n      path,\n      queryParams,\n      body,\n      options\n    );\n  }\n\n  /** Make a PATCH request */\n  async patch<TSuccess, TError>(\n    path: string,\n    queryParams?: Values,\n    body?: any,\n    options?: Partial<ITransportSettings>\n  ): Promise<SDKResponse<TSuccess, TError>> {\n    return this.authRequest<TSuccess, TError>(\n      'PATCH',\n      path,\n      queryParams,\n      body,\n      options\n    );\n  }\n}\n"],"mappings":"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"}