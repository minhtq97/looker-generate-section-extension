"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rootFile = exports.readFile = exports.getRootPath = exports.TestConfig = void 0;
var fs = _interopRequireWildcard(require("fs"));
var _path = _interopRequireDefault(require("path"));
var yaml = _interopRequireWildcard(require("js-yaml"));
var _findRoot = require("@manypkg/find-root");
var _dotenv = require("dotenv");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var utf8 = 'utf-8';
var rootPath = '';
var getRootPath = () => {
  if (!rootPath) {
    rootPath = (0, _findRoot.findRootSync)(__dirname).rootDir;
  }
  return rootPath;
};
exports.getRootPath = getRootPath;
var rootFile = exports.rootFile = function rootFile() {
  var fileName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return _path.default.join(getRootPath(), fileName);
};
var readFile = fileName => fs.readFileSync(fileName, utf8);
exports.readFile = readFile;
var TestConfig = exports.TestConfig = function TestConfig() {
  var rootPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  (0, _dotenv.config)();
  var testFile = 'data.yml';
  rootPath = rootPath || getRootPath();
  var localIni = process.env.LOOKERSDK_INI || rootFile('looker.ini');
  var testPath = "".concat(rootPath, "/packages/sdk-codegen-utils/data/");
  var dataFile = "".concat(testPath).concat(testFile);
  var testData = fs.existsSync(dataFile) ? yaml.load(fs.readFileSync(dataFile, utf8)) : {};
  var testIni = "".concat(rootPath).concat(testData.iniFile);
  if (!fs.existsSync(localIni)) localIni = '';
  if (!fs.existsSync(testIni)) testIni = '';
  return {
    dataFile,
    localIni,
    rootPath,
    testData,
    testIni,
    testPath
  };
};
//# sourceMappingURL=testUtils.js.map