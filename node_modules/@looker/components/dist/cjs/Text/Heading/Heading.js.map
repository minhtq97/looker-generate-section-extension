{"version":3,"file":"Heading.js","names":["_styledComponents","_interopRequireDefault","require","_designTokens","_TextBase","_truncate","_templateObject","obj","__esModule","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","headingLevelFontSize","as","headingLineHeight","fontSize","Heading","styled","TextBase","attrs","_ref","_ref$as","_ref$color","color","_ref$fontFamily","fontFamily","_ref$fontWeight","fontWeight","lineHeight","withConfig","displayName","componentId","textTransform","truncateCSS","exports"],"sources":["../../../../src/Text/Heading/Heading.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport styled from 'styled-components';\nimport type {\n  CompatibleHTMLProps,\n  FontSizes,\n  ResponsiveValue,\n  TextTransformProps,\n} from '@looker/design-tokens';\nimport { textTransform } from '@looker/design-tokens';\nimport type { TextBaseProps } from '../Text/TextBase';\nimport { TextBase } from '../Text/TextBase';\nimport type { TruncateCSSProps } from '../truncate';\nimport { truncateCSS } from '../truncate';\n\ntype HeadingLevels = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n\nexport interface HeadingProps\n  extends TextBaseProps,\n    TextTransformProps,\n    TruncateCSSProps,\n    Omit<CompatibleHTMLProps<HTMLHeadingElement>, 'wrap'> {\n  /** Heading level from h1-h6\n   * @default: 'h2'\n   */\n  as?: HeadingLevels;\n}\n\nconst headingLevelFontSize = (as: HeadingLevels) => {\n  switch (as) {\n    case 'h1':\n      return 'xxlarge';\n    case 'h3':\n      return 'large';\n    case 'h4':\n      return 'medium';\n    case 'h5':\n      return 'small';\n    case 'h6':\n      return 'xsmall';\n    case 'h2':\n    default:\n      return 'xlarge';\n  }\n};\n\nconst headingLineHeight = (\n  as: HeadingLevels,\n  fontSize?: ResponsiveValue<FontSizes>\n): ResponsiveValue<FontSizes> => fontSize || headingLevelFontSize(as);\n\nexport const Heading = styled(TextBase).attrs<HeadingProps>(\n  ({\n    as = 'h2',\n    color = 'title',\n    fontFamily = 'brand',\n    fontSize,\n    fontWeight = 'normal',\n    lineHeight,\n  }) => ({\n    as,\n    color,\n    fontFamily,\n    fontSize: fontSize || headingLevelFontSize(as),\n    fontWeight,\n    lineHeight: lineHeight || headingLineHeight(as, fontSize),\n  })\n)<HeadingProps>`\n  ${textTransform}\n  ${truncateCSS}\n`;\n"],"mappings":";;;;;;AAKA,IAAAA,iBAAA,GAAAC,sBAAA,CAAAC,OAAA;AAOA,IAAAC,aAAA,GAAAD,OAAA;AAEA,IAAAE,SAAA,GAAAF,OAAA;AAEA,IAAAG,SAAA,GAAAH,OAAA;AAA0C,IAAAI,eAAA;AAAA,SAAAL,uBAAAM,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAAA,SAAAE,uBAAAC,OAAA,EAAAC,GAAA,SAAAA,GAAA,IAAAA,GAAA,GAAAD,OAAA,CAAAE,KAAA,cAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAE,gBAAA,CAAAL,OAAA,IAAAC,GAAA,IAAAK,KAAA,EAAAH,MAAA,CAAAC,MAAA,CAAAH,GAAA;AAe1C,IAAMM,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,EAAiB,EAAK;EAClD,QAAQA,EAAE;IACR,KAAK,IAAI;MACP,OAAO,SAAS;IAClB,KAAK,IAAI;MACP,OAAO,OAAO;IAChB,KAAK,IAAI;MACP,OAAO,QAAQ;IACjB,KAAK,IAAI;MACP,OAAO,OAAO;IAChB,KAAK,IAAI;MACP,OAAO,QAAQ;IACjB,KAAK,IAAI;IACT;MACE,OAAO,QAAQ;EACnB;AACF,CAAC;AAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CACrBD,EAAiB,EACjBE,QAAqC;EAAA,OACNA,QAAQ,IAAIH,oBAAoB,CAACC,EAAE,CAAC;AAAA;AAE9D,IAAMG,OAAO,GAAG,IAAAC,4BAAM,EAACC,kBAAQ,CAAC,CAACC,KAAK,CAC3C,UAAAC,IAAA;EAAA,IAAAC,OAAA,GAAAD,IAAA,CACEP,EAAE;IAAFA,EAAE,GAAAQ,OAAA,cAAG,IAAI,GAAAA,OAAA;IAAAC,UAAA,GAAAF,IAAA,CACTG,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG,OAAO,GAAAA,UAAA;IAAAE,eAAA,GAAAJ,IAAA,CACfK,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAG,OAAO,GAAAA,eAAA;IACpBT,QAAQ,GAAAK,IAAA,CAARL,QAAQ;IAAAW,eAAA,GAAAN,IAAA,CACRO,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAG,QAAQ,GAAAA,eAAA;IACrBE,UAAU,GAAAR,IAAA,CAAVQ,UAAU;EAAA,OACL;IACLf,EAAE,EAAFA,EAAE;IACFU,KAAK,EAALA,KAAK;IACLE,UAAU,EAAVA,UAAU;IACVV,QAAQ,EAAEA,QAAQ,IAAIH,oBAAoB,CAACC,EAAE,CAAC;IAC9Cc,UAAU,EAAVA,UAAU;IACVC,UAAU,EAAEA,UAAU,IAAId,iBAAiB,CAACD,EAAE,EAAEE,QAAQ;EAC1D,CAAC;AAAA,CACH,CAAC,CAAAc,UAAA;EAAAC,WAAA;EAAAC,WAAA;AAAA,GAAA9B,eAAA,KAAAA,eAAA,GAAAG,sBAAA,2BACG4B,2BAAa,EACbC,qBAAW,CACd;AAACC,OAAA,CAAAlB,OAAA,GAAAA,OAAA"}