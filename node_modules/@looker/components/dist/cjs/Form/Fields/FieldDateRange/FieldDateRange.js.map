{"version":3,"file":"FieldDateRange.js","names":["_react","_interopRequireWildcard","require","_styledComponents","_interopRequireDefault","_FloatingLabelField","_Field","_Form","_utils","_InputDateRange","_templateObject","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","value","checkValueOnBlur","e","inputs","Array","from","currentTarget","querySelectorAll","some","input","FieldDateRange","styled","forwardRef","props","ref","validationMessage","useFormContext","id","useID","createElement","FloatingLabelField","pickFieldProps","hasValue","InputDateRange","omitFieldProps","concat","onChange","validationType","type","withConfig","displayName","componentId","exports"],"sources":["../../../../../src/Form/Fields/FieldDateRange/FieldDateRange.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { FocusEvent, Ref } from 'react';\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { FloatingLabelField } from '../Field/FloatingLabelField';\nimport { omitFieldProps, pickFieldProps } from '../Field/Field';\nimport { useFormContext } from '../../Form';\nimport { useID } from '../../../utils';\nimport type { InputDateRangeProps } from '../../Inputs/InputDateRange';\nimport { InputDateRange } from '../../Inputs/InputDateRange';\nimport type { FieldProps, FloatingLabelFieldProps } from '../Field';\n\nexport interface FieldInputDateRangeProps\n  extends FieldProps,\n    FloatingLabelFieldProps,\n    InputDateRangeProps {\n  ref: Ref<HTMLInputElement>;\n}\n\nconst checkValueOnBlur = (e: FocusEvent) => {\n  const inputs = Array.from(e.currentTarget.querySelectorAll('input'));\n  // Check both inputs (to - from) for a value\n  return inputs.some(input => input.value !== '');\n};\n\nexport const FieldDateRange = styled(\n  forwardRef((props: FieldInputDateRangeProps, ref: Ref<HTMLInputElement>) => {\n    const validationMessage = useFormContext(props);\n    const id = useID(props.id);\n\n    return (\n      <FloatingLabelField\n        {...pickFieldProps(props)}\n        checkValueOnBlur={checkValueOnBlur}\n        hasValue={!!props.value}\n        id={id}\n        validationMessage={validationMessage}\n      >\n        <InputDateRange\n          {...omitFieldProps(props)}\n          aria-describedby={`describedby-${id}`}\n          aria-labelledby={`labelledby-${id}`}\n          id={id}\n          onChange={props.onChange}\n          value={props.value}\n          validationType={validationMessage && validationMessage.type}\n          ref={ref}\n        />\n      </FloatingLabelField>\n    );\n  })\n)``;\n"],"mappings":"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"}