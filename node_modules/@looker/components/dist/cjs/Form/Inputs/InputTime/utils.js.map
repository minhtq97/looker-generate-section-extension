{"version":3,"file":"utils.js","names":["_padStart","_interopRequireDefault","require","_toString","_map3","obj","__esModule","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","isArray","formatTimeString","number","padStart","exports","parseBase10Int","parseInt","isValidTime","_map","map","split","_map2","_map2$","hour","_map2$2","minute"],"sources":["../../../../../src/Form/Inputs/InputTime/utils.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport padStart from 'lodash/padStart';\nimport toString from 'lodash/toString';\nimport map from 'lodash/map';\n\nexport type TimeFormats = '12h' | '24h';\n\n// returns \"01\", \"02\", \"03\" instead of integers 1, 2, 3\nexport const formatTimeString = (number: number) => {\n  return padStart(toString(number), 2, '0');\n};\n\nexport const parseBase10Int = (value: string) =>\n  value.length ? parseInt(value, 10) : 0;\n\n// take a 24 hour formatted time string ('14:34') and check whether it's a real time of day\n// rejects non-numeric inputs and illogical times ('64:1928')\nexport const isValidTime = (value?: string) => {\n  if (!value) {\n    return true;\n  }\n  const [hour = 0, minute = 0] = map(value.split(':'), parseBase10Int);\n\n  if (hour < 24 && minute <= 60) {\n    return true;\n  }\n\n  return false;\n};\n"],"mappings":"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"}