{"version":3,"file":"InputTime.js","names":["_react","_interopRequireWildcard","require","_designTokens","_styledComponents","_interopRequireDefault","_noop","_add","_subtract","_ErrorIcon","_InputProps","_InputText","_height","_innerInputStyle","_simple","_utils","_templateObject","_templateObject2","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Symbol","iterator","constructor","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","value","_extends","assign","bind","target","i","arguments","length","source","apply","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","name","Array","from","test","len","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","push","err","isArray","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","initialState","charCount","format","hour","isComplete","minute","period","subInputFocus","isNumericKey","e","keyCode","isArrowKey","isDeleteKey","selectNextInput","current","isInputComplete","_ref","reducer","state","action","payload","type","inputValues","cycleValue","currentValue","max","min","transform","add","subtract","newValue","parseBase10Int","formatTimeString","parseValue","_value$split$map","split","map","_value$split$map2","hr24","hr12","convert12To24HrString","includes","numericTime","replace","_numericTime$split$ma","_numericTime$split$ma2","_numericTime$split$ma3","_numericTime$split$ma4","concat","exports","InputTimeInternal","forwardRef","_ref2","ref","className","defaultValue","ariaDescribedby","ariaLabelledby","autoFocus","disabled","_ref2$format","id","onChange","readOnly","onBlur","onFocus","onValidationFail","required","validationType","_useReducer","useReducer","_useReducer2","inputState","dispatch","inputRefs","HOUR","useRef","MINUTE","NONE","PERIOD","handleValidKeyDown","handleDelete","setStateCB","handleHourKeyDown","clearHourField","handleMinuteKeyDown","clearMinuteField","handlePeriodKeyDown","clearPeriodField","toUpperCase","nextPeriod","handleHourFocus","handleMinuteFocus","handlePeriodFocus","handleBlur","useEffect","focus","valueProp","isValidTime","_parseValue","_parseValue2","newHour","newMinute","newPeriod","console","error","createElement","StyledInput","onKeyDown","noop","getAutoFocusProps","InputTextContent","pr","ErrorIcon","styled","withConfig","shouldForwardProp","displayName","componentId","attrs","maxLength","placeholder","innerInputStyle","_ref3","theme","fontSizes","small","_ref4","lineHeights","medium","_ref5","space","u5","_ref6","colors","keyAccent","InputTime","simpleLayoutCSS","inputCSS","inputHeight","_ref7","u05","u1","u3","inputTextFocus","inputTextHover","inputTextDisabled","inputTextValidation"],"sources":["../../../../../src/Form/Inputs/InputTime/InputTime.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport type {\n  KeyboardEvent,\n  Reducer,\n  Ref,\n  RefObject,\n  SyntheticEvent,\n} from 'react';\nimport React, { forwardRef, useReducer, useEffect, useRef } from 'react';\nimport { shouldForwardProp } from '@looker/design-tokens';\nimport styled from 'styled-components';\nimport noop from 'lodash/noop';\nimport add from 'lodash/add';\nimport subtract from 'lodash/subtract';\nimport type { ValidationType } from '../../ValidationMessage';\n\nimport { ErrorIcon } from '../ErrorIcon';\nimport { getAutoFocusProps } from '../InputProps';\nimport {\n  InputTextContent,\n  inputCSS,\n  inputTextHover,\n  inputTextFocus,\n  inputTextDisabled,\n  inputTextValidation,\n} from '../InputText';\nimport { inputHeight } from '../height';\nimport { innerInputStyle } from '../innerInputStyle';\nimport { simpleLayoutCSS } from '../../../Layout/utils/simple';\nimport type { SimpleLayoutProps } from '../../../Layout/utils/simple';\nimport type { TimeFormats } from './utils';\nimport { formatTimeString, parseBase10Int, isValidTime } from './utils';\n\nexport interface InputTimeProps extends Omit<SimpleLayoutProps, 'size'> {\n  'aria-describedby'?: string;\n  'aria-labelledby'?: string;\n  autoFocus?: boolean;\n  format?: TimeFormats;\n  defaultValue?: string;\n  value?: string;\n  onChange?: (time?: string) => void;\n  validationType?: ValidationType;\n  onValidationFail?: (value?: string) => void;\n  className?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  id?: string;\n  onFocus?: (e: SyntheticEvent) => void;\n  onBlur?: (e: SyntheticEvent) => void;\n  required?: boolean;\n}\n\ntype Periods = 'AM' | 'PM' | '';\n\ntype ActionTypes =\n  | 'SET_FOCUS'\n  | 'INCREMENT_CHAR_COUNT'\n  | 'RESET_CHAR_COUNT'\n  | 'FOCUS_NEXT_FIELD'\n  | 'SET_HOUR_VALUE'\n  | 'SET_MINUTE_VALUE'\n  | 'SET_PERIOD_VALUE';\n\ntype SubInputs = 'NONE' | 'HOUR' | 'MINUTE' | 'PERIOD';\n\ninterface InputState {\n  charCount: number;\n  subInputFocus?: SubInputs;\n  hour: string;\n  minute: string;\n  period: Periods;\n  isComplete: boolean;\n  format: TimeFormats;\n}\n\ninterface InputAction {\n  type: ActionTypes;\n  payload?: SubInputs | string | Periods;\n}\n\nconst initialState: InputState = {\n  charCount: 0,\n  format: '12h',\n  hour: '',\n  isComplete: false,\n  minute: '',\n  period: '',\n  subInputFocus: 'NONE',\n};\n\nconst isNumericKey = (e: KeyboardEvent) =>\n  (e.keyCode >= 48 && e.keyCode <= 57) || (e.keyCode >= 96 && e.keyCode <= 105);\n\nconst isArrowKey = (e: KeyboardEvent) =>\n  e.key === 'ArrowUp' || e.key === 'ArrowDown';\n\nconst isDeleteKey = (e: KeyboardEvent) => {\n  return e.key === 'Backspace' || e.key === 'Delete';\n};\n\nconst selectNextInput = (current?: SubInputs) => {\n  switch (current) {\n    case 'HOUR':\n      return 'MINUTE';\n    case 'MINUTE':\n      return 'PERIOD';\n    case 'PERIOD':\n      return 'NONE';\n    default:\n      return 'NONE';\n  }\n};\n\ninterface IsCompleteConfig {\n  format: TimeFormats;\n  hour: string;\n  minute: string;\n  period: string;\n}\n\nconst isInputComplete = ({\n  format,\n  hour,\n  minute,\n  period,\n}: IsCompleteConfig): boolean => {\n  if (format === '12h') {\n    return !!(hour.length && minute.length && period.length);\n  }\n  return !!(hour.length && minute.length);\n};\n\nconst reducer: Reducer<InputState, InputAction> = (state, action) => {\n  const { payload, type } = action;\n  const inputValues: IsCompleteConfig = {\n    format: state.format,\n    hour: state.hour,\n    minute: state.minute,\n    period: state.period,\n  };\n  switch (type) {\n    case 'SET_FOCUS':\n      return { ...state, subInputFocus: payload as SubInputs };\n    case 'FOCUS_NEXT_FIELD':\n      return { ...state, subInputFocus: selectNextInput(state.subInputFocus) };\n    case 'INCREMENT_CHAR_COUNT':\n      return { ...state, charCount: state.charCount + 1 };\n    case 'RESET_CHAR_COUNT':\n      return { ...state, charCount: 0 };\n    case 'SET_HOUR_VALUE':\n      return {\n        ...state,\n        hour: payload as string,\n        isComplete: isInputComplete({\n          ...inputValues,\n          hour: payload as string,\n        }),\n      };\n    case 'SET_MINUTE_VALUE':\n      return {\n        ...state,\n        isComplete: isInputComplete({\n          ...inputValues,\n          minute: payload as string,\n        }),\n        minute: payload as string,\n      };\n    case 'SET_PERIOD_VALUE':\n      return {\n        ...state,\n        isComplete: isInputComplete({\n          ...inputValues,\n          period: payload as string,\n        }),\n        period: payload as Periods,\n      };\n    default:\n      return state;\n  }\n};\n\ntype RefMap = {\n  [k in SubInputs]: RefObject<HTMLInputElement>;\n};\n\nconst cycleValue = (\n  currentValue: string,\n  key: string,\n  max: 12 | 23 | 59,\n  min: 1 | 0\n) => {\n  const transform = key === 'ArrowUp' ? add : subtract;\n  const newValue = transform(parseBase10Int(currentValue), 1);\n  if (newValue < min) {\n    return formatTimeString(max);\n  } else if (newValue > max) {\n    return formatTimeString(min);\n  } else {\n    return formatTimeString(newValue);\n  }\n};\n\n// take the value prop (a 24hr string) and break it into component parts\nconst parseValue = (format: TimeFormats, value = '') => {\n  if (value.length) {\n    const [hr24, minute] = value.split(':').map(parseBase10Int);\n    const hr12 = hr24 <= 12 ? hr24 : hr24 - 12;\n    const period = hr24 >= 12 ? 'PM' : 'AM';\n    return [\n      formatTimeString(format === '12h' ? hr12 : hr24),\n      formatTimeString(minute),\n      period,\n    ];\n  }\n  return ['', '', ''];\n};\n\n// take a 12hr string (e.g. '01:15 pm') and convert to equivalent 24hr string (e.g. '13:15')\nexport const convert12To24HrString = (value: string) => {\n  const period = value.includes('P') ? 'PM' : 'AM';\n  const numericTime = value.replace(/[APM]/gi, '');\n  const [hour = 0, minute = 0] = numericTime.split(':').map(parseBase10Int);\n\n  let hr24;\n  if (period === 'AM' && hour === 12) {\n    hr24 = 0;\n  } else if (period === 'PM' && hour < 12) {\n    hr24 = hour + 12;\n  } else {\n    hr24 = hour;\n  }\n\n  return `${formatTimeString(hr24)}:${formatTimeString(minute)}`;\n};\n\nconst InputTimeInternal = forwardRef(\n  (\n    {\n      className,\n      defaultValue,\n      'aria-describedby': ariaDescribedby,\n      'aria-labelledby': ariaLabelledby,\n      autoFocus,\n      disabled,\n      format = '12h',\n      id,\n      onChange,\n      readOnly,\n      onBlur,\n      onFocus,\n      onValidationFail,\n      required,\n      validationType,\n      value,\n    }: InputTimeProps,\n    ref: Ref<HTMLDivElement>\n  ) => {\n    const [inputState, dispatch] = useReducer(reducer, {\n      ...initialState,\n      format,\n    });\n\n    const { hour, minute, period, isComplete, subInputFocus } = inputState;\n\n    const inputRefs: RefMap = {\n      HOUR: useRef(null),\n      MINUTE: useRef(null),\n      NONE: useRef(null),\n      PERIOD: useRef(null),\n    };\n\n    // run this listener for every valid numeric entry\n    const handleValidKeyDown = () => {\n      dispatch({ type: 'INCREMENT_CHAR_COUNT' });\n      if (inputState.charCount > 0) {\n        dispatch({ type: 'FOCUS_NEXT_FIELD' });\n      }\n    };\n\n    const handleDelete = (setStateCB: () => void) => {\n      onChange && onChange(undefined);\n      setStateCB();\n    };\n\n    const handleHourKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n      const clearHourField = () => {\n        dispatch({ payload: '', type: 'SET_HOUR_VALUE' });\n        dispatch({ type: 'RESET_CHAR_COUNT' });\n      };\n      if (isNumericKey(e)) {\n        const value = parseBase10Int(\n          // append or replace new char to existing value based on length of input\n          inputState.charCount === 1 ? `${hour}${e.key}` : e.key\n        );\n        if (value < 24) {\n          // valid input!\n          if (format === '12h' && value > 12) {\n            dispatch({\n              payload: formatTimeString(value - 12),\n              type: 'SET_HOUR_VALUE',\n            });\n            dispatch({ payload: 'PM', type: 'SET_PERIOD_VALUE' });\n          } else {\n            dispatch({\n              payload: formatTimeString(value),\n              type: 'SET_HOUR_VALUE',\n            });\n          }\n          handleValidKeyDown();\n        } else {\n          // reset if invalid value is entered (e.g. 62:87 pm)\n          clearHourField();\n        }\n      } else if (isArrowKey(e)) {\n        // cycle through possible values with up/down arrows\n        const max = format === '12h' ? 12 : 23;\n        const min = format === '12h' ? 1 : 0;\n        dispatch({\n          payload: cycleValue(hour, e.key, max, min),\n          type: 'SET_HOUR_VALUE',\n        });\n      } else if (isDeleteKey(e)) {\n        // user delete\n        handleDelete(clearHourField);\n      }\n    };\n\n    const handleMinuteKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n      const clearMinuteField = () => {\n        dispatch({ payload: '', type: 'SET_MINUTE_VALUE' });\n        dispatch({ type: 'RESET_CHAR_COUNT' });\n      };\n      if (isNumericKey(e)) {\n        // append or replace new char to existing value\n        const value = parseBase10Int(\n          inputState.charCount === 1 ? `${minute}${e.key}` : e.key\n        );\n        if (value < 60) {\n          // valid input!\n          dispatch({\n            payload: formatTimeString(value),\n            type: 'SET_MINUTE_VALUE',\n          });\n          handleValidKeyDown();\n        } else {\n          // reset if invalid value is entered (e.g. 62:87 pm)\n          clearMinuteField();\n        }\n      } else if (isArrowKey(e)) {\n        // cycle through possible values with up/down arrows\n        dispatch({\n          payload: cycleValue(minute, e.key, 59, 0),\n          type: 'SET_MINUTE_VALUE',\n        });\n      } else if (isDeleteKey(e)) {\n        // user delete\n        handleDelete(clearMinuteField);\n      }\n    };\n\n    const handlePeriodKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n      const clearPeriodField = () => {\n        dispatch({ payload: '', type: 'SET_PERIOD_VALUE' });\n        dispatch({ type: 'RESET_CHAR_COUNT' });\n      };\n      const key = e.key.toUpperCase();\n      if (key === 'P' || key === 'A') {\n        dispatch({ payload: `${key}M`, type: 'SET_PERIOD_VALUE' });\n        handleValidKeyDown();\n      } else if (isArrowKey(e)) {\n        // cycle through possible values with up/down arrows\n        const nextPeriod = period === 'PM' ? 'AM' : 'PM';\n        dispatch({ payload: nextPeriod, type: 'SET_PERIOD_VALUE' });\n      } else if (isDeleteKey(e)) {\n        // user delete\n        handleDelete(clearPeriodField);\n      }\n    };\n\n    const handleHourFocus = () =>\n      dispatch({ payload: 'HOUR', type: 'SET_FOCUS' });\n    const handleMinuteFocus = () =>\n      dispatch({ payload: 'MINUTE', type: 'SET_FOCUS' });\n    const handlePeriodFocus = () =>\n      dispatch({ payload: 'PERIOD', type: 'SET_FOCUS' });\n    const handleBlur = () => {\n      dispatch({ payload: 'NONE', type: 'SET_FOCUS' });\n      dispatch({ type: 'RESET_CHAR_COUNT' });\n    };\n\n    // Input UX: automatically advance cursor to specified input\n    // Also track state for whether user is focusing or blurring any sub input\n    useEffect(() => {\n      const ref = subInputFocus && inputRefs[subInputFocus];\n      if (ref?.current) {\n        ref.current.focus();\n      }\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [subInputFocus]);\n\n    useEffect(\n      () => {\n        const valueProp = value || defaultValue;\n        // Controlled Component: update state on every value change\n        if (isValidTime(valueProp)) {\n          const [newHour, newMinute, newPeriod] = parseValue(format, valueProp);\n          hour !== newHour &&\n            dispatch({ payload: newHour, type: 'SET_HOUR_VALUE' });\n          minute !== newMinute &&\n            dispatch({ payload: newMinute, type: 'SET_MINUTE_VALUE' });\n          period !== newPeriod &&\n            dispatch({ payload: newPeriod, type: 'SET_PERIOD_VALUE' });\n        } else {\n          onValidationFail && onValidationFail(valueProp);\n          // eslint-disable-next-line no-console\n          console.error(\n            `Invalid time (\"${valueProp}\") passed to <InputTime />. Value should be formatted as a 24-hour string (e.g. value=\"02:00\" or value=\"23:15\").`\n          );\n        }\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [value]\n    );\n\n    // controlled component: call 'onChange' if all sub-inputs are filled in\n    useEffect(() => {\n      if (isComplete) {\n        const newValue =\n          format === '12h'\n            ? convert12To24HrString(`${hour}:${minute} ${period}`)\n            : `${hour}:${minute}`;\n        if (newValue !== value) {\n          onChange && onChange(`${newValue}`);\n        }\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isComplete, hour, minute, period]);\n\n    return (\n      <div\n        className={`${className} ${disabled && 'disabled'}`}\n        ref={ref}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        aria-invalid={validationType === 'error' ? 'true' : undefined}\n        aria-describedby={ariaDescribedby}\n        aria-labelledby={ariaLabelledby}\n        aria-disabled={disabled}\n      >\n        <StyledInput\n          id={id}\n          value={hour}\n          onKeyDown={readOnly ? noop : handleHourKeyDown}\n          onFocus={handleHourFocus}\n          onBlur={handleBlur}\n          onChange={noop} // suppress controlled component warning\n          ref={inputRefs.HOUR}\n          data-testid=\"input-hour\"\n          disabled={disabled}\n          readOnly={readOnly}\n          required={required}\n          {...getAutoFocusProps(autoFocus)}\n        />\n        <div>:</div>\n        <StyledInput\n          value={minute}\n          onKeyDown={readOnly ? noop : handleMinuteKeyDown}\n          onFocus={handleMinuteFocus}\n          onBlur={handleBlur}\n          onChange={noop} // suppress controlled component warning\n          ref={inputRefs.MINUTE}\n          data-testid=\"input-minute\"\n          disabled={disabled}\n          readOnly={readOnly}\n          required={required}\n        />\n        {format === '12h' ? (\n          <StyledInput\n            value={period}\n            onKeyDown={readOnly ? noop : handlePeriodKeyDown}\n            onFocus={handlePeriodFocus}\n            onBlur={handleBlur}\n            onChange={noop} // suppress controlled component warning\n            ref={inputRefs.PERIOD}\n            data-testid=\"input-period\"\n            disabled={disabled}\n            readOnly={readOnly}\n            required={required}\n          />\n        ) : (\n          <span />\n        )}\n        {validationType && (\n          <InputTextContent pr=\"u2\">\n            <ErrorIcon />\n          </InputTextContent>\n        )}\n      </div>\n    );\n  }\n);\n\nconst StyledInput = styled.input\n  .withConfig({ shouldForwardProp })\n  .attrs(() => ({\n    maxLength: 2,\n    placeholder: '--',\n    type: 'text',\n  }))`\n  ${innerInputStyle}\n  font-family: inherit;\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  line-height: ${({ theme }) => theme.lineHeights.medium};\n  padding: 0;\n  text-align: center;\n  width: ${({ theme }) => theme.space.u5};\n\n  &:focus {\n    background: ${({ theme }) => theme.colors.keyAccent};\n  }\n`;\n\nexport const InputTime = styled(InputTimeInternal)`\n  ${simpleLayoutCSS}\n  ${inputCSS}\n\n  align-items: center;\n  display: inline-grid;\n  grid-gap: 0.15rem;\n  grid-template-columns: auto auto auto auto 1fr;\n  height: ${inputHeight};\n  padding: ${({ theme: { space } }) =>\n    `${space.u05} ${space.u1} ${space.u05} ${space.u3}`};\n\n  ${InputTextContent} {\n    justify-self: end;\n  }\n\n  &:focus-within {\n    ${inputTextFocus}\n  }\n\n  &:hover {\n    ${inputTextHover}\n  }\n\n  &.disabled {\n    ${inputTextDisabled}\n  }\n\n  ${inputTextValidation}\n`;\n"],"mappings":"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"}