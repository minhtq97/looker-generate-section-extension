{"version":3,"file":"InputDateRange.js","names":["_react","_interopRequireWildcard","require","_styledComponents","_interopRequireDefault","_isFunction","_isEmpty","_dateFns","_CalendarToday","_utils","_Calendar","_utils2","_VisuallyHidden","_Popover","_InlineInputText","_InputTextContent","_ErrorIcon","_IconButton","_Space","_utils3","_InputText","_height","_templateObject","_templateObject2","_templateObject3","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","arr2","_i","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","err","isArray","_taggedTemplateLiteral","strings","raw","freeze","getTextForDate","range","dateStringFormat","locale","endpoint","date","formatDateString","getViewMonthFromValue","to","Date","InputDateRange","styled","forwardRef","props","ref","ariaLabelledby","disabled","id","onChange","onValidationFail","readOnly","validationType","_useTranslation","useTranslation","t","_useState","useState","_useState2","viewMonth","setViewMonth","startDateLabelledby","concat","endDateLabelledby","dateTexts","useMemo","getText","_useState3","_useState4","fromTextInputValue","setFromTextInputValue","useEffect","fromID","useID","_useState5","_useState6","toTextInputValue","setToTextInputValue","toID","getEndpoint","useCallback","_ref","updateRangeFromInput","currentTarget","inputValue","validationMessage","valueEndpoint","newRange","parsedValue","parseDateFromString","isBefore","isSameDay","isFunction","handleBlur","e","handleKeyDown","preventDefault","handleInputChange","_useToggle","useToggle","isOpen","setOpen","change","toggle","handleIconClick","_usePopover","usePopover","content","createElement","VisuallyHidden","Calendar","isRange","onSelectRange","selectedRange","onMonthChange","focusTrap","placement","triggerToggle","popover","popoverRef","commonInputProps","fontSize","onBlur","onKeyDown","InputTextGroupWrapper","InlineInputTextBase","placeholder","HyphenWrapper","hasInputValues","isEmpty","Space","gap","justify","pr","IconButton","size","label","icon","CalendarToday","onClick","InputTextContent","pl","ErrorIcon","withConfig","displayName","componentId","exports","span","_ref2","theme","colors","text3","text1","div","inputCSS","_ref3","fonts","body","inputHeight","_ref4","space","u05","u1","inputTextHover","inputTextFocus","inputTextValidation","_ref5","inputTextDisabled","_ref6","_ref7","keyAccent","_ref8","u2"],"sources":["../../../../../src/Form/Inputs/InputDateRange/InputDateRange.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport type { FocusEvent, ChangeEvent, KeyboardEvent, Ref } from 'react';\nimport React, {\n  forwardRef,\n  useEffect,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react';\nimport styled from 'styled-components';\nimport isFunction from 'lodash/isFunction';\nimport isEmpty from 'lodash/isEmpty';\nimport { isBefore, isSameDay } from 'date-fns';\nimport type { Locale } from 'date-fns';\nimport { CalendarToday } from '@styled-icons/material/CalendarToday';\nimport { useTranslation } from '../../../utils';\nimport type { RangeModifier } from '../../../Calendar/types';\nimport { Calendar } from '../../../Calendar/Calendar';\nimport { formatDateString, parseDateFromString } from '../../../Calendar/utils';\nimport { VisuallyHidden } from '../../../VisuallyHidden';\nimport { usePopover } from '../../../Popover';\nimport type { InlineInputTextProps } from '../InlineInputText';\nimport { InlineInputTextBase } from '../InlineInputText';\nimport { InputTextContent } from '../InputText/InputTextContent';\nimport { ErrorIcon } from '../ErrorIcon';\nimport { IconButton } from '../../../Button/IconButton';\nimport { Space } from '../../../Layout/Space';\nimport { useToggle, useID } from '../../../utils/';\nimport type { ValidationType } from '../../ValidationMessage';\nimport {\n  inputCSS,\n  inputTextDisabled,\n  inputTextFocus,\n  inputTextHover,\n  inputTextValidation,\n} from '../InputText';\nimport { inputHeight } from '../height';\n\nexport type InputDateRangeProps = {\n  'aria-labelledby'?: string;\n  dateStringFormat?: string;\n  disabled?: boolean;\n  id?: string;\n  locale?: Locale;\n  onChange: (range: RangeModifier) => void;\n  onValidationFail?: (value: string) => void;\n  readOnly?: boolean;\n  ref?: Ref<HTMLInputElement>;\n  validationType?: ValidationType;\n  value: RangeModifier;\n};\n\ntype Endpoint = keyof RangeModifier;\n\nconst getTextForDate =\n  (range?: RangeModifier, dateStringFormat?: string, locale?: Locale) =>\n  (endpoint?: Endpoint) => {\n    const date = endpoint ? range?.[endpoint] : undefined;\n    return formatDateString(date, dateStringFormat, locale);\n  };\n\nconst getViewMonthFromValue = (value: RangeModifier) =>\n  value.from || value.to || new Date();\n\nexport const InputDateRange = styled(\n  // eslint-disable-next-line react/display-name\n  forwardRef((props: InputDateRangeProps, ref: Ref<HTMLInputElement>) => {\n    const {\n      'aria-labelledby': ariaLabelledby,\n      dateStringFormat,\n      disabled,\n      locale,\n      id,\n      onChange,\n      onValidationFail,\n      readOnly,\n      value,\n      validationType,\n    } = props;\n    const { t } = useTranslation('InputDateRange');\n\n    const [viewMonth, setViewMonth] = useState(getViewMonthFromValue(value));\n\n    const startDateLabelledby = `startDate-labelledby-${id}`;\n    const endDateLabelledby = `endDate-labelledby-${id}`;\n\n    const dateTexts = useMemo(() => {\n      const getText = getTextForDate(value, dateStringFormat, locale);\n      return {\n        from: getText('from'),\n        to: getText('to'),\n      };\n    }, [value, dateStringFormat, locale]);\n\n    // FROM state\n    const [fromTextInputValue, setFromTextInputValue] = useState(\n      dateTexts.from\n    );\n    useEffect(() => {\n      setFromTextInputValue(dateTexts.from);\n    }, [dateTexts.from]);\n\n    const fromID = useID(id && `from-${id}`);\n\n    // TO state\n    const [toTextInputValue, setToTextInputValue] = useState(dateTexts.to);\n    useEffect(() => {\n      setToTextInputValue(dateTexts.to);\n    }, [dateTexts.to]);\n\n    const toID = useID(id && `to-${id}`);\n\n    // Based on an event's target, get the endpoint by the id attribute\n    const getEndpoint = useCallback(\n      ({ id }: HTMLInputElement) => {\n        return id === fromID ? 'from' : 'to';\n      },\n      [fromID]\n    );\n\n    // Called from blur and enter key events, parse the date when user is done typing\n    const updateRangeFromInput = useCallback(\n      (currentTarget: HTMLInputElement) => {\n        const inputValue = currentTarget.value;\n        const endpoint = getEndpoint(currentTarget);\n        let validationMessage = inputValue;\n        const valueEndpoint = value[endpoint];\n\n        if (inputValue === '') {\n          // empty string is valid\n          validationMessage = '';\n          if (valueEndpoint) {\n            // Input has been cleared, remove the endpoint's date\n            const newRange = { ...value };\n            delete newRange[endpoint];\n            onChange(newRange);\n          }\n        } else {\n          const parsedValue = parseDateFromString(\n            inputValue,\n            locale,\n            dateStringFormat\n          );\n          // Check if the date has changed\n          if (parsedValue) {\n            // string was parse-able as a date\n            const newRange = { ...value, [endpoint]: parsedValue };\n            validationMessage =\n              newRange.from &&\n              newRange.to &&\n              !isBefore(newRange.from, newRange.to)\n                ? 'Invalid range'\n                : '';\n            if (!valueEndpoint || !isSameDay(valueEndpoint, parsedValue)) {\n              // User has entered a new and valid date â€“ call onChange\n              // with an updated range, and update the Calendar's viewMonth\n              setViewMonth(parsedValue);\n              onChange(newRange);\n            }\n          }\n        }\n        if (validationMessage && isFunction(onValidationFail)) {\n          onValidationFail(validationMessage);\n        }\n      },\n      [dateStringFormat, getEndpoint, locale, onChange, onValidationFail, value]\n    );\n\n    const handleBlur = useCallback(\n      (e: FocusEvent<HTMLInputElement>) => {\n        updateRangeFromInput(e.currentTarget);\n      },\n      [updateRangeFromInput]\n    );\n\n    const handleKeyDown = useCallback(\n      (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n          // Don't submit a form if there is one\n          e.preventDefault();\n          // Update values when the user hits return\n          updateRangeFromInput(e.currentTarget);\n        }\n      },\n      [updateRangeFromInput]\n    );\n\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      const endpoint = getEndpoint(e.target);\n      if (endpoint === 'from') {\n        setFromTextInputValue(value);\n      } else {\n        setToTextInputValue(value);\n      }\n    };\n\n    // Calendar Popover\n    const { value: isOpen, change: setOpen, toggle } = useToggle();\n    // Update the Calendar viewMonth to reflect the current value\n    // each time the icon is clicked\n    const handleIconClick = useCallback(() => {\n      setViewMonth(getViewMonthFromValue(value));\n      toggle();\n    }, [toggle, value]);\n\n    const { popover, ref: popoverRef } = usePopover({\n      content: (\n        <div>\n          <VisuallyHidden aria-live=\"assertive\">\n            {viewMonth ? formatDateString(viewMonth, 'MMMM-yyyy', locale) : ''}\n          </VisuallyHidden>\n          <Calendar\n            disabled={disabled}\n            locale={locale}\n            isRange\n            onSelectRange={onChange}\n            selectedRange={value}\n            viewMonth={viewMonth}\n            onMonthChange={setViewMonth}\n          />\n        </div>\n      ),\n      focusTrap: false,\n      isOpen,\n      placement: 'bottom-start',\n      ref,\n      setOpen,\n      triggerToggle: false,\n    });\n\n    // Props shared by both inputs\n    const commonInputProps: InlineInputTextProps = {\n      disabled,\n      fontSize: 'small',\n      onBlur: handleBlur,\n      onChange: handleInputChange,\n      onKeyDown: handleKeyDown,\n      readOnly,\n    };\n\n    return (\n      <InputTextGroupWrapper\n        ref={popoverRef}\n        disabled={disabled}\n        validationType={validationType}\n      >\n        <InlineInputTextBase\n          placeholder={t('Start date')}\n          data-testid=\"date-from-text-input\"\n          id={fromID}\n          value={fromTextInputValue}\n          aria-labelledby={`${ariaLabelledby} ${startDateLabelledby}`}\n          {...commonInputProps}\n        />\n        <HyphenWrapper hasInputValues={!isEmpty(value)} aria-hidden=\"true\">\n          &ndash;\n        </HyphenWrapper>\n        <VisuallyHidden id={endDateLabelledby}>{'End date'}</VisuallyHidden>\n        <InlineInputTextBase\n          placeholder={t('End date')}\n          data-testid=\"date-to-text-input\"\n          id={toID}\n          value={toTextInputValue}\n          aria-labelledby={`${ariaLabelledby} ${endDateLabelledby}`}\n          {...commonInputProps}\n        />\n        <Space gap=\"xxsmall\" justify=\"end\" pr=\"u2\">\n          <IconButton\n            size=\"xsmall\"\n            label={'Open calendar'}\n            icon={<CalendarToday />}\n            onClick={handleIconClick}\n            disabled={readOnly || disabled}\n          />\n          {validationType === 'error' && (\n            <InputTextContent pl=\"u1\">\n              <ErrorIcon />\n            </InputTextContent>\n          )}\n        </Space>\n        {popover}\n      </InputTextGroupWrapper>\n    );\n  })\n)``;\n\nconst HyphenWrapper = styled.span<{ hasInputValues: boolean }>`\n  align-items: center;\n  color: ${({ theme, hasInputValues }) =>\n    hasInputValues ? theme.colors.text3 : theme.colors.text1};\n  display: flex;\n  .label-down & {\n    display: none;\n  }\n`;\n\ninterface InputTextGroupWrapperProps {\n  disabled?: boolean;\n  validationType?: 'error';\n}\n\nconst InputTextGroupWrapper = styled.div<InputTextGroupWrapperProps>`\n  ${inputCSS}\n  align-items: stretch;\n  display: flex;\n  font-family: ${({ theme }) => theme.fonts.body};\n  height: ${inputHeight};\n  justify-content: space-evenly;\n  padding: ${({ theme: { space } }) => `${space.u05} ${space.u1}`};\n  width: 100%;\n  &:hover {\n    ${inputTextHover}\n  }\n\n  &:focus-within {\n    ${inputTextFocus}\n  }\n\n  ${inputTextValidation}\n\n  ${({ disabled }) => disabled && inputTextDisabled}\n\n  input {\n    font-family: inherit;\n  }\n  ${InlineInputTextBase} {\n    flex-shrink: 0;\n    margin: ${({ theme }) => theme.space.u05} 0;\n    &:focus-within {\n      background: ${({ theme }) => theme.colors.keyAccent};\n    }\n    input,\n    span {\n      padding: 0 ${({ theme }) => theme.space.u2};\n    }\n  }\n`;\n"],"mappings":"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"}