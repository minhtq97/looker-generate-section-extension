{"version":3,"file":"ComboboxMulti.js","names":["_every","_interopRequireDefault","require","_isMatch","_react","_interopRequireWildcard","_styledComponents","_utils","_useFocusManagement","_state","_ComboboxContext","_ComboboxWrapper","_useComboboxRefs2","_useComboboxToggle","_useScrollState","_templateObject","_excluded","_excluded2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","value","_extends","assign","bind","target","i","arguments","length","source","apply","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","toString","constructor","name","Array","from","test","len","arr2","_i","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","err","isArray","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","compareOptions","optionsA","optionsB","every","optionA","find","optionB","isMatch","ComboboxMultiInternal","forwardRef","_ref","forwardedRef","_ref$openOnFocus","openOnFocus","_ref$openOnClick","openOnClick","onChange","values","defaultValues","onClose","onOpen","propsID","id","shouldRenderListInline","rest","initialValues","initialData","options","_useReducerMachine","useReducerMachine","reducerMulti","defaultMultiData","inputValues","_useReducerMachine2","state","data","transition","lastActionType","ComboboxActionType","SELECT_SILENT","focusManagement","useFocusManagement","useID","isVisible","useComboboxToggle","_useComboboxRefs","useComboboxRefs","ref","commonRefs","scrollState","useScrollState","context","createElement","ComboboxMultiContext","Provider","ComboboxWrapper","exports","ComboboxMulti","styled","attrs","_ref2","_ref2$display","display","flexDirection","withConfig","displayName","componentId"],"sources":["../../../../../../src/Form/Inputs/Combobox/ComboboxMulti/ComboboxMulti.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\n// Much of the following is pulled from https://github.com/reach/reach-ui\n// because their work is fantastic (but is not in TypeScript)\n\nimport every from 'lodash/every';\nimport isMatch from 'lodash/isMatch';\nimport type { Ref } from 'react';\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { useID } from '../../../../utils';\nimport { useFocusManagement } from '../utils/useFocusManagement';\nimport type { ComboboxMultiCallback, ComboboxOptionObject } from '../types';\nimport type { ComboboxMultiData } from '../utils/state';\nimport {\n  reducerMulti,\n  useReducerMachine,\n  ComboboxActionType,\n} from '../utils/state';\nimport { ComboboxMultiContext, defaultMultiData } from '../ComboboxContext';\nimport type { ComboboxCommonProps } from '../Combobox';\nimport { ComboboxWrapper } from '../ComboboxWrapper';\nimport type { ComboboxWrapperProps } from '../ComboboxWrapper';\nimport { useComboboxRefs } from '../utils/useComboboxRefs';\nimport { useComboboxToggle } from '../utils/useComboboxToggle';\nimport { useScrollState } from '../utils/useScrollState';\n\nfunction compareOptions(\n  optionsA: ComboboxOptionObject[],\n  optionsB: ComboboxOptionObject[]\n) {\n  return every(optionsA, optionA =>\n    optionsB.find(optionB => isMatch(optionA, optionB))\n  );\n}\n\nexport interface ComboboxMultiProps\n  extends ComboboxWrapperProps,\n    ComboboxCommonProps<ComboboxMultiCallback> {\n  /**\n   * The current option (controlled)\n   */\n  values?: ComboboxOptionObject[];\n  /**\n   * The initial option (uncontrolled)\n   */\n  defaultValues?: ComboboxOptionObject[];\n}\n\nexport const ComboboxMultiInternal = forwardRef(\n  (\n    {\n      // opens the list when the input receives focused (but only if there are\n      // items in the list)\n      openOnFocus = false,\n      openOnClick = true,\n\n      onChange,\n      values,\n      defaultValues,\n      onClose,\n      onOpen,\n      id: propsID,\n      shouldRenderListInline,\n\n      ...rest\n    }: ComboboxMultiProps,\n    forwardedRef: Ref<HTMLDivElement>\n  ) => {\n    const initialValues = values || defaultValues;\n    const initialData: ComboboxMultiData = {\n      options: initialValues || [],\n    };\n\n    const [state, data, transition] = useReducerMachine(\n      reducerMulti,\n      {\n        ...defaultMultiData,\n        ...initialData,\n      },\n      { inputValues: [], options: [] },\n      shouldRenderListInline\n    );\n    const { lastActionType, options } = data;\n\n    if (\n      values !== undefined &&\n      (options.length !== values.length || !compareOptions(options, values))\n    ) {\n      transition &&\n        transition(ComboboxActionType.SELECT_SILENT, {\n          options: values,\n        });\n    }\n\n    const focusManagement = useFocusManagement(lastActionType);\n\n    const id = useID(propsID);\n\n    const isVisible = useComboboxToggle(state, options, onOpen, onClose);\n\n    const { ref, ...commonRefs } = useComboboxRefs(forwardedRef);\n\n    const scrollState = useScrollState();\n\n    const context = {\n      ...commonRefs,\n      ...focusManagement,\n      ...scrollState,\n      data,\n      id,\n      isVisible,\n      onChange,\n      openOnClick,\n      openOnFocus,\n      state,\n      transition,\n    };\n\n    return (\n      <ComboboxMultiContext.Provider value={context}>\n        <ComboboxWrapper id={id} {...rest} isVisible={isVisible} ref={ref} />\n      </ComboboxMultiContext.Provider>\n    );\n  }\n);\n\nexport const ComboboxMulti = styled(ComboboxMultiInternal).attrs(\n  ({ display = 'flex', flexDirection, shouldRenderListInline }) => ({\n    display,\n    flexDirection: flexDirection || (shouldRenderListInline && 'column'),\n  })\n)``;\n"],"mappings":"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"}