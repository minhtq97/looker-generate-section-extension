{"version":3,"file":"useOptionStatus.js","names":["_react","require","useOptionStatus","context","value","_useContext","useContext","data","navigationOption","isActive","contextOption","option","contextOptions","options","isSelected","find","undefined"],"sources":["../../../../../../src/Form/Inputs/Combobox/utils/useOptionStatus.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Context } from 'react';\nimport { useContext } from 'react';\nimport type {\n  ComboboxContextProps,\n  ComboboxMultiContextProps,\n} from '../ComboboxContext';\nimport type { ComboboxOptionStatuses } from '../types';\nimport type { ComboboxData, ComboboxMultiData } from './state';\n\nexport function useOptionStatus<\n  CProps extends ComboboxContextProps | ComboboxMultiContextProps\n>(context: Context<CProps>, value: string): ComboboxOptionStatuses {\n  const { data } = useContext(context);\n  const { navigationOption } = data;\n  const isActive = navigationOption ? navigationOption.value === value : false;\n\n  const contextOption = (data as ComboboxData).option;\n  const contextOptions = (data as ComboboxMultiData).options;\n  const options = contextOption ? [contextOption] : contextOptions || [];\n  const isSelected =\n    options.find(option => option.value === value) !== undefined;\n\n  return {\n    isActive,\n    isSelected,\n  };\n}\n"],"mappings":";;;;;;AAMA,IAAAA,MAAA,GAAAC,OAAA;AAQO,SAASC,eAAeA,CAE7BC,OAAwB,EAAEC,KAAa,EAA0B;EACjE,IAAAC,WAAA,GAAiB,IAAAC,iBAAU,EAACH,OAAO,CAAC;IAA5BI,IAAI,GAAAF,WAAA,CAAJE,IAAI;EACZ,IAAQC,gBAAgB,GAAKD,IAAI,CAAzBC,gBAAgB;EACxB,IAAMC,QAAQ,GAAGD,gBAAgB,GAAGA,gBAAgB,CAACJ,KAAK,KAAKA,KAAK,GAAG,KAAK;EAE5E,IAAMM,aAAa,GAAIH,IAAI,CAAkBI,MAAM;EACnD,IAAMC,cAAc,GAAIL,IAAI,CAAuBM,OAAO;EAC1D,IAAMA,OAAO,GAAGH,aAAa,GAAG,CAACA,aAAa,CAAC,GAAGE,cAAc,IAAI,EAAE;EACtE,IAAME,UAAU,GACdD,OAAO,CAACE,IAAI,CAAC,UAAAJ,MAAM;IAAA,OAAIA,MAAM,CAACP,KAAK,KAAKA,KAAK;EAAA,EAAC,KAAKY,SAAS;EAE9D,OAAO;IACLP,QAAQ,EAARA,QAAQ;IACRK,UAAU,EAAVA;EACF,CAAC;AACH"}