{"version":3,"file":"Divider.js","names":["_designTokens","require","_styledComponents","_interopRequireDefault","_templateObject","_templateObject2","obj","__esModule","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","appearanceVariant","variant","prop","variants","dark","bg","light","onDark","DividerBase","styled","hr","withConfig","shouldForwardProp","displayName","componentId","attrs","_ref","_ref$appearance","appearance","customColor","_ref$size","size","role","reset","position","space","_ref2","color","exports","Divider","_ref3"],"sources":["../../../src/Divider/Divider.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type {\n  CompatibleHTMLProps,\n  PositionProps,\n  SpaceProps,\n} from '@looker/design-tokens';\nimport {\n  color,\n  position,\n  reset,\n  space,\n  shouldForwardProp,\n  variant,\n} from '@looker/design-tokens';\nimport styled from 'styled-components';\n\nexport interface DividerProps\n  extends CompatibleHTMLProps<HTMLHRElement>,\n    PositionProps,\n    SpaceProps {\n  appearance?: 'default' | 'light' | 'dark' | 'onDark';\n  customColor?: string;\n  size?: string | number;\n}\n\nconst appearanceVariant = variant({\n  prop: 'appearance',\n  variants: {\n    dark: {\n      bg: 'ui4',\n    },\n    default: {\n      bg: 'ui3',\n    },\n    light: {\n      bg: 'ui2',\n    },\n    onDark: {\n      bg: 'text2',\n    },\n  },\n});\n\nexport const DividerBase = styled.hr\n  .withConfig({ shouldForwardProp })\n  .attrs<DividerProps>(\n    ({ appearance = 'default', customColor, size = '1px' }) => ({\n      appearance,\n      'aria-orientation': 'horizontal',\n      bg: customColor,\n      role: 'separator',\n      size,\n    })\n  )<DividerProps>`\n  ${reset}\n  ${position}\n\n  border: none;\n  margin: 0; /* reset <hr /> built-in margin */\n  ${space}\n\n  ${({ customColor }) => (customColor ? color : appearanceVariant)}\n`;\n\nexport const Divider = styled(DividerBase)`\n  height: ${({ size }) => size};\n  width: 100%;\n`;\n"],"mappings":";;;;;;AAUA,IAAAA,aAAA,GAAAC,OAAA;AAQA,IAAAC,iBAAA,GAAAC,sBAAA,CAAAF,OAAA;AAAuC,IAAAG,eAAA,EAAAC,gBAAA;AAAA,SAAAF,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAAA,SAAAE,uBAAAC,OAAA,EAAAC,GAAA,SAAAA,GAAA,IAAAA,GAAA,GAAAD,OAAA,CAAAE,KAAA,cAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAE,gBAAA,CAAAL,OAAA,IAAAC,GAAA,IAAAK,KAAA,EAAAH,MAAA,CAAAC,MAAA,CAAAH,GAAA;AAWvC,IAAMM,iBAAiB,GAAG,IAAAC,qBAAO,EAAC;EAChCC,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE;IACRC,IAAI,EAAE;MACJC,EAAE,EAAE;IACN,CAAC;IACD,WAAS;MACPA,EAAE,EAAE;IACN,CAAC;IACDC,KAAK,EAAE;MACLD,EAAE,EAAE;IACN,CAAC;IACDE,MAAM,EAAE;MACNF,EAAE,EAAE;IACN;EACF;AACF,CAAC,CAAC;AAEK,IAAMG,WAAW,GAAGC,4BAAM,CAACC,EAAE,CACjCC,UAAU,CAAC;EAAEC,iBAAiB,EAAjBA,+BAAiB;EAAAC,WAAA;EAAAC,WAAA;AAAC,CAAC,CAAC,CACjCC,KAAK,CACJ,UAAAC,IAAA;EAAA,IAAAC,eAAA,GAAAD,IAAA,CAAGE,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAG,SAAS,GAAAA,eAAA;IAAEE,WAAW,GAAAH,IAAA,CAAXG,WAAW;IAAAC,SAAA,GAAAJ,IAAA,CAAEK,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,KAAK,GAAAA,SAAA;EAAA,OAAQ;IAC1DF,UAAU,EAAVA,UAAU;IACV,kBAAkB,EAAE,YAAY;IAChCb,EAAE,EAAEc,WAAW;IACfG,IAAI,EAAE,WAAW;IACjBD,IAAI,EAAJA;EACF,CAAC;AAAA,CACH,CAAC,CAAAjC,eAAA,KAAAA,eAAA,GAAAI,sBAAA,iHACC+B,mBAAK,EACLC,sBAAQ,EAIRC,mBAAK,EAEL,UAAAC,KAAA;EAAA,IAAGP,WAAW,GAAAO,KAAA,CAAXP,WAAW;EAAA,OAAQA,WAAW,GAAGQ,mBAAK,GAAG3B,iBAAiB;AAAA,CAAC,CACjE;AAAC4B,OAAA,CAAApB,WAAA,GAAAA,WAAA;AAEK,IAAMqB,OAAO,GAAG,IAAApB,4BAAM,EAACD,WAAW,CAAC,CAAAG,UAAA;EAAAE,WAAA;EAAAC,WAAA;AAAA,GAAAzB,gBAAA,KAAAA,gBAAA,GAAAG,sBAAA,4CAC9B,UAAAsC,KAAA;EAAA,IAAGT,IAAI,GAAAS,KAAA,CAAJT,IAAI;EAAA,OAAOA,IAAI;AAAA,EAE7B;AAACO,OAAA,CAAAC,OAAA,GAAAA,OAAA"}