{"version":3,"file":"NavTree.js","names":["_ArrowDropDown","require","_ArrowRight","_styledComponents","_interopRequireDefault","_react","_interopRequireWildcard","_utils","_ListItem","_TreeContext","_Accordion","_utils2","_List","_AccordionIndicator","_utils3","_WindowedTreeNode","_NavTreeDisclosure","_NavTreeItemContent","_excluded","_excluded2","_templateObject","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","arr2","_i","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","err","isArray","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","_taggedTemplateLiteral","strings","raw","freeze","INDICATOR_SPACER","exports","NavTree","styled","_ref","children","defaultOpen","indicatorLabel","propsIsOpen","isOpen","label","onBlur","onClick","onClose","onFocus","onKeyUp","onOpen","onMouseEnter","onMouseLeave","propsToggleOpen","toggleOpen","_ref$truncate","truncate","restProps","isIndicatorToggleOnly","href","_partitionTreeProps","partitionTreeProps","_partitionTreeProps2","treeItemInnerProps","accordionInnerProps","_useTreeHandlers","useTreeHandlers","hovered","contentHandlers","wrapperHandlers","_ref2","disabled","icon","rel","selected","_partitionAriaProps","partitionAriaProps","_partitionAriaProps2","ariaProps","treeContext","useContext","TreeContext","_useContext","WindowedTreeContext","contextIsOpen","toggleNode","partialRender","startingDepth","depth","_createListItemPartit","createListItemPartitions","_createListItemPartit2","inside","outside","accordionProps","_useAccordion","useAccordion2","createElement","List","disableKeyboardNav","role","windowing","indicatorIcons","close","ArrowRight","concat","open","ArrowDropDown","indicatorPosition","tabIndex","contentDomProps","domProps","disclosureProps","accordionIsOpen","indicator","disclosureLabel","_disclosureFocusVisible","focusVisible","onBlurDisclosureToggle","onClickDisclosureToggle","onKeyUpDisclosureToggle","disclosureDomProps","indicatorToggleOnlyProps","renderedIndicator","cloneElement","handleContentBlur","useWrapEvent","event","handleContentClick","handleContentKeyUp","statefulProps","color","ripple","content","Fragment","NavTreeItemContent","itemRole","createSafeRel","HoverDisclosureContext","Provider","visible","NavTreeDisclosure","withConfig","displayName","componentId","AccordionIndicator","_ref3","theme","space","listItemDimensions","defaults","density","gap"],"sources":["../../../src/NavTree/NavTree.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport { ArrowDropDown } from '@styled-icons/material/ArrowDropDown';\nimport { ArrowRight } from '@styled-icons/material/ArrowRight';\nimport styled from 'styled-components';\nimport type { FocusEvent, KeyboardEvent, MouseEvent } from 'react';\nimport React, { cloneElement, useContext } from 'react';\nimport type { ControlledOrUncontrolled } from '../Accordion2/controlTypes';\nimport { partitionTreeProps, useTreeHandlers } from '../Tree/utils';\nimport type { ListItemProps } from '../ListItem';\nimport { listItemDimensions } from '../ListItem';\nimport { TreeContext } from '../Tree/TreeContext';\nimport { useAccordion2 } from '../Accordion2';\nimport {\n  createSafeRel,\n  HoverDisclosureContext,\n  partitionAriaProps,\n  useWrapEvent,\n} from '../utils';\nimport { List } from '../List';\nimport { AccordionIndicator } from '../Accordion2/AccordionIndicator';\nimport { createListItemPartitions } from '../ListItem/utils';\nimport { WindowedTreeContext } from '../Tree/WindowedTreeNode';\nimport type { NavTreeProps } from './types';\nimport { NavTreeDisclosure } from './NavTreeDisclosure';\nimport { NavTreeItemContent } from './NavTreeItem/NavTreeItemContent';\n\n/**\n * Adds additional padding to left side of all NavTree-related elements\n * to allow for better click targeting when NavTree composition bumps against\n * left page edge.\n */\nexport const INDICATOR_SPACER = '8px';\n\nexport const NavTree = styled(\n  ({\n    children,\n    defaultOpen,\n    indicatorLabel,\n    isOpen: propsIsOpen,\n    label,\n    onBlur,\n    onClick,\n    onClose,\n    onFocus,\n    onKeyUp,\n    onOpen,\n    onMouseEnter,\n    onMouseLeave,\n    toggleOpen: propsToggleOpen,\n    truncate = true,\n    ...restProps\n  }: NavTreeProps) => {\n    /**\n     * If `href` is supplied the clicking the label will NOT trigger\n     * the underlying accordion. Only the indicator will trigger toggle\n     */\n    const isIndicatorToggleOnly = !!restProps.href;\n\n    const [treeItemInnerProps, accordionInnerProps] = partitionTreeProps(\n      restProps as Record<string, unknown>\n    );\n\n    const { hovered, contentHandlers, wrapperHandlers } = useTreeHandlers({\n      onFocus,\n      onMouseEnter,\n      onMouseLeave,\n    });\n\n    const { disabled, href, icon, rel, selected, target } =\n      treeItemInnerProps as Partial<ListItemProps>;\n    const [ariaProps] = partitionAriaProps(restProps);\n\n    const treeContext = useContext(TreeContext);\n\n    // Context for supporting windowing\n    // - density must be defined at the collection level for consistent child height\n    // - opened / closed state must be managed at the collection level for accurate item count\n    // - partialRender to hide the accordion disclosure if it's above the window\n    const {\n      isOpen: contextIsOpen,\n      toggleNode,\n      partialRender,\n    } = useContext(WindowedTreeContext);\n\n    const isOpen = contextIsOpen ?? propsIsOpen;\n    const toggleOpen = toggleNode ?? propsToggleOpen;\n\n    const startingDepth = 0;\n    const depth = treeContext.depth ? treeContext.depth : startingDepth;\n\n    const [inside, outside] = createListItemPartitions({\n      ...treeItemInnerProps,\n      children: label,\n      icon,\n      truncate,\n    });\n    let accordionProps: ControlledOrUncontrolled = {\n      defaultOpen,\n      onClose,\n      onOpen,\n      ...accordionInnerProps,\n    };\n    if (isOpen !== undefined && toggleOpen) {\n      accordionProps = { ...accordionProps, isOpen, toggleOpen };\n    }\n\n    const {\n      contentDomProps,\n      domProps,\n      disclosureProps,\n      isOpen: accordionIsOpen,\n    } = useAccordion2({\n      'aria-selected': selected,\n      children: (\n        <List disableKeyboardNav role=\"group\" windowing={false}>\n          {children}\n        </List>\n      ),\n      disabled,\n      indicatorIcons: {\n        close: <ArrowRight aria-label={`${indicatorLabel} Close`} />,\n        open: <ArrowDropDown aria-label={`${indicatorLabel} Open`} />,\n      },\n      indicatorPosition: 'left',\n      label: inside,\n      onBlur,\n      role: 'treeitem',\n      tabIndex: -1,\n      ...accordionProps,\n    });\n\n    const {\n      indicator,\n      children: disclosureLabel,\n      focusVisible: _disclosureFocusVisible,\n      onBlur: onBlurDisclosureToggle,\n      onClick: onClickDisclosureToggle,\n      onKeyUp: onKeyUpDisclosureToggle,\n      ...disclosureDomProps\n    } = disclosureProps;\n\n    const indicatorToggleOnlyProps = {\n      onBlur: onBlurDisclosureToggle,\n      onClick: onClickDisclosureToggle,\n      onKeyUp: onKeyUpDisclosureToggle,\n      tabIndex: -1,\n    };\n    const renderedIndicator = cloneElement(indicator, {\n      ...(isIndicatorToggleOnly ? indicatorToggleOnlyProps : undefined),\n    });\n\n    const handleContentBlur = useWrapEvent((event: FocusEvent<HTMLElement>) => {\n      if (!isIndicatorToggleOnly && onBlurDisclosureToggle)\n        onBlurDisclosureToggle(event);\n    });\n\n    const handleContentClick = useWrapEvent(\n      (event: MouseEvent<HTMLElement>) => {\n        if (!isIndicatorToggleOnly && onClickDisclosureToggle)\n          onClickDisclosureToggle(event);\n      },\n      onClick\n    );\n\n    const handleContentKeyUp = useWrapEvent(\n      (event: KeyboardEvent<HTMLElement>) => {\n        if (!isIndicatorToggleOnly && onKeyUpDisclosureToggle)\n          onKeyUpDisclosureToggle(event);\n      }\n    );\n\n    const statefulProps = {\n      color: 'key' as const,\n      disabled,\n      hovered,\n      // disables the hover bg color since ripple includes hover style\n      ripple: true,\n      selected,\n    };\n\n    const content = (\n      <>\n        {isIndicatorToggleOnly && renderedIndicator}\n        <NavTreeItemContent\n          aria-selected={selected}\n          href={href}\n          itemRole={isIndicatorToggleOnly ? 'link' : 'none'}\n          onBlur={handleContentBlur}\n          /**\n           * useAccordion2 would normally just wrap props' onClick and onKeyup\n           * with open state toggling, but because we only want the indicator to handle\n           * open state toggling, we do not pass onClick and onKeyUp\n           * into useAccordion2 and receive them via disclosureProps, so instead we directly assign them here\n           */\n          onClick={handleContentClick}\n          onKeyUp={handleContentKeyUp}\n          rel={createSafeRel(rel, target)}\n          /**\n           * Parent NavTreeDisclosure will handle ripple effect\n           */\n          ripple={false}\n          target={target}\n          {...ariaProps}\n          {...contentHandlers}\n          {...disclosureDomProps}\n        >\n          {!isIndicatorToggleOnly && renderedIndicator}\n          {disclosureLabel}\n        </NavTreeItemContent>\n      </>\n    );\n\n    return (\n      <HoverDisclosureContext.Provider value={{ visible: hovered }}>\n        <TreeContext.Provider\n          value={{\n            color: statefulProps.color,\n            depth: depth + 1,\n          }}\n        >\n          <div {...domProps}>\n            {!partialRender && (\n              <NavTreeDisclosure\n                depth={depth}\n                {...wrapperHandlers}\n                {...statefulProps}\n              >\n                {content}\n                {outside}\n              </NavTreeDisclosure>\n            )}\n            {accordionIsOpen && <div {...contentDomProps} />}\n          </div>\n        </TreeContext.Provider>\n      </HoverDisclosureContext.Provider>\n    );\n  }\n)<NavTreeProps>`\n  ${AccordionIndicator} {\n    padding-left: ${INDICATOR_SPACER};\n    ${({ icon, theme }) =>\n      !icon &&\n      `margin-right: ${\n        theme.space[listItemDimensions(theme.defaults.density).gap]\n      };`}\n  }\n`;\n"],"mappings":"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"}