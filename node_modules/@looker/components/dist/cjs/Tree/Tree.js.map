{"version":3,"file":"Tree.js","names":["_styledComponents","_interopRequireWildcard","require","_react","_Accordion","_Layout","_utils","_List","_ListItem","_utils2","_TreeContext","_utils3","_WindowedTreeNode","_TreeItemContent","_TreeItem","_templateObject","_templateObject2","_templateObject3","_excluded","_excluded2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","value","_extends","assign","bind","target","i","arguments","length","source","apply","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","toString","constructor","name","Array","from","test","len","arr2","_i","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","err","isArray","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","TreeLayout","forwardRef","_ref","ref","propsBorder","border","children","propsIsOpen","isOpen","_ref$itemRole","itemRole","label","defaultOpen","onBlur","onClose","onFocus","onOpen","onMouseEnter","onMouseLeave","propsToggleOpen","toggleOpen","restProps","_partitionTreeProps","partitionTreeProps","_partitionTreeProps2","treeItemInnerProps","accordionInnerProps","_useTreeHandlers","useTreeHandlers","hovered","contentHandlers","wrapperHandlers","_ref2","propsColor","color","propsDensity","density","disabled","href","icon","rel","selected","_partitionAriaProps","partitionAriaProps","_partitionAriaProps2","ariaProps","listContext","useContext","ListItemContext","treeContext","TreeContext","_useContext","WindowedTreeContext","collectionDensity","contextIsOpen","toggleNode","partialRender","open","undefinedCoalesce","startingDepth","depth","indicatorIcons","indicatorDefaults","indicatorPosition","_createListItemPartit","createListItemPartitions","_createListItemPartit2","inside","outside","accordionProps","_useAccordion","useAccordion2","createElement","List","disableKeyboardNav","role","windowing","tabIndex","contentDomProps","domProps","disclosureProps","accordionIsOpen","indicator","disclosureLabel","disclosureDomProps","statefulProps","content","TreeItemContent","createSafeRel","ripple","HoverDisclosureContext","Provider","visible","Flex","as","TreeAccordionContent","styled","div","withConfig","displayName","componentId","generateTreeBorder","dividersCSS","css","TreeItem","Tree","_ref3","dividers","exports"],"sources":["../../../src/Tree/Tree.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport styled, { css } from 'styled-components';\nimport React, { forwardRef, useContext } from 'react';\nimport type { Ref } from 'react';\nimport { useAccordion2 } from '../Accordion2';\nimport type { ControlledOrUncontrolled } from '../Accordion2/controlTypes';\nimport { Flex } from '../Layout';\nimport {\n  createSafeRel,\n  HoverDisclosureContext,\n  partitionAriaProps,\n  undefinedCoalesce,\n} from '../utils';\nimport { List } from '../List';\nimport type { ListItemProps } from '../ListItem';\nimport { ListItemContext } from '../ListItem';\nimport { createListItemPartitions } from '../ListItem/utils';\nimport { TreeContext } from './TreeContext';\nimport type { TreeBorderProps } from './utils';\nimport {\n  generateTreeBorder,\n  indicatorDefaults,\n  partitionTreeProps,\n  useTreeHandlers,\n} from './utils';\nimport { WindowedTreeContext } from './WindowedTreeNode';\nimport type { TreeProps } from './types';\nimport { TreeItemContent } from './TreeItemContent';\nimport { TreeItem } from './TreeItem';\n\nconst TreeLayout = forwardRef(\n  (\n    {\n      border: propsBorder,\n      children,\n      isOpen: propsIsOpen,\n      itemRole = 'none', // By default, Tree's content container should be a 'div'\n      label,\n      defaultOpen,\n      onBlur,\n      onClose,\n      onFocus,\n      onOpen,\n      onMouseEnter,\n      onMouseLeave,\n      toggleOpen: propsToggleOpen,\n      ...restProps\n    }: TreeProps,\n    ref: Ref<HTMLLIElement>\n  ) => {\n    const [treeItemInnerProps, accordionInnerProps] = partitionTreeProps(\n      restProps as Record<string, unknown>\n    );\n\n    const { hovered, contentHandlers, wrapperHandlers } = useTreeHandlers({\n      onFocus,\n      onMouseEnter,\n      onMouseLeave,\n    });\n\n    const {\n      color: propsColor,\n      density: propsDensity,\n      disabled,\n      href,\n      icon,\n      rel,\n      selected,\n      target,\n    } = treeItemInnerProps as Partial<ListItemProps>;\n    const [ariaProps] = partitionAriaProps(restProps);\n\n    const listContext = useContext(ListItemContext);\n    const treeContext = useContext(TreeContext);\n\n    // Context for supporting windowing\n    // - density must be defined at the collection level for consistent child height\n    // - opened / closed state must be managed at the collection level for accurate item count\n    // - partialRender to hide the accordion disclosure if it's above the window\n    const {\n      density: collectionDensity,\n      isOpen: contextIsOpen,\n      toggleNode,\n      partialRender,\n    } = useContext(WindowedTreeContext);\n\n    const isOpen = contextIsOpen ?? propsIsOpen;\n    const toggleOpen = (open: boolean) => {\n      toggleNode?.(open);\n      propsToggleOpen?.(open);\n    };\n\n    const border = undefinedCoalesce([propsBorder, treeContext.border]);\n    const color = undefinedCoalesce([\n      propsColor,\n      treeContext.color,\n      listContext.color,\n    ]);\n\n    const startingDepth = 0;\n    const depth = treeContext.depth ? treeContext.depth : startingDepth;\n\n    const density =\n      collectionDensity || propsDensity || treeContext.density || 0;\n\n    const { indicatorIcons, indicatorPosition } = indicatorDefaults;\n\n    const [inside, outside] = createListItemPartitions({\n      ...treeItemInnerProps,\n      children: label,\n      color,\n      density,\n      icon,\n    });\n    let accordionProps: ControlledOrUncontrolled = {\n      defaultOpen,\n      onClose,\n      onOpen,\n      ...accordionInnerProps,\n    };\n    if (isOpen !== undefined && toggleOpen) {\n      accordionProps = { ...accordionProps, isOpen, toggleOpen };\n    }\n\n    const {\n      contentDomProps,\n      domProps,\n      disclosureProps,\n      isOpen: accordionIsOpen,\n    } = useAccordion2({\n      'aria-selected': selected,\n      children: (\n        <List disableKeyboardNav role=\"group\" windowing={false}>\n          {children}\n        </List>\n      ),\n      density,\n      disabled,\n      indicatorIcons,\n      indicatorPosition,\n      label: inside,\n      onBlur,\n      role: 'treeitem',\n      tabIndex: -1,\n      ...accordionProps,\n    });\n\n    const {\n      indicator,\n      children: disclosureLabel,\n      ...disclosureDomProps\n    } = disclosureProps;\n\n    const statefulProps = {\n      color,\n      disabled,\n      hovered,\n      selected,\n    };\n\n    const content = (\n      <TreeItemContent\n        aria-selected={selected}\n        depth={depth}\n        href={href}\n        itemRole={itemRole}\n        {...contentHandlers}\n        rel={createSafeRel(rel, target)}\n        ripple={false}\n        target={target}\n        {...ariaProps}\n        {...disclosureDomProps}\n        {...statefulProps}\n      >\n        {indicator}\n        {disclosureLabel}\n      </TreeItemContent>\n    );\n\n    return (\n      <HoverDisclosureContext.Provider value={{ visible: hovered }}>\n        <TreeContext.Provider\n          value={{\n            border,\n            color,\n            density,\n            depth: depth + 1,\n          }}\n        >\n          <div {...domProps}>\n            {!partialRender && (\n              <Flex as=\"li\" color=\"text5\" {...wrapperHandlers} ref={ref}>\n                {content}\n                {outside}\n              </Flex>\n            )}\n            {accordionIsOpen && (\n              <TreeAccordionContent\n                border={border}\n                density={density}\n                depth={depth}\n                {...contentDomProps}\n              />\n            )}\n          </div>\n        </TreeContext.Provider>\n      </HoverDisclosureContext.Provider>\n    );\n  }\n);\n\n/**\n * Container for hidden / revealed content based on Tree open state\n */\nconst TreeAccordionContent = styled.div<TreeBorderProps>`\n  ${generateTreeBorder}\n`;\n\nconst dividersCSS = css`\n  ${TreeItem} {\n    margin-top: 1px;\n  }\n\n  & & {\n    margin-top: 1px;\n  }\n`;\n\nexport const Tree = styled(TreeLayout)<TreeProps>`\n  ${({ dividers }) => dividers && dividersCSS}\n`;\n"],"mappings":"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"}