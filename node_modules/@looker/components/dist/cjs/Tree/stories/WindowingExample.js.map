{"version":3,"file":"WindowingExample.js","names":["_react","_interopRequireDefault","require","_Button","_Layout","_utils","_2","obj","__esModule","WindowingExample","_useToggle","useToggle","value","toggle","trees","React","useMemo","Array","from","_","treeIndex","content","createElement","Tree","label","concat","isOpen","items","itemIndex","nestedItemIdex","TreeItem","SpaceVertical","Button","onClick","WindowedTreeCollection","height","width"],"sources":["../../../../src/Tree/stories/WindowingExample.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react';\nimport { Button } from '../../Button';\nimport { SpaceVertical } from '../../Layout';\nimport { useToggle } from '../../utils';\nimport { Tree, TreeItem, WindowedTreeCollection } from '..';\n\nexport default function WindowingExample() {\n  const { value, toggle } = useToggle();\n\n  const trees = React.useMemo(\n    () =>\n      Array.from(Array(200), (_, treeIndex) => ({\n        content: <Tree label={`Tree ${treeIndex}`} />,\n        isOpen: value,\n        items: Array.from(Array(10), (_, itemIndex) => {\n          if (itemIndex === 2) {\n            return {\n              content: <Tree label={`Nested Tree ${treeIndex}-${itemIndex}`} />,\n              isOpen: value,\n              items: Array.from(Array(4), (_, nestedItemIdex) => ({\n                content: (\n                  <TreeItem>\n                    Nested TreeItem {treeIndex}-{itemIndex}-{nestedItemIdex}\n                  </TreeItem>\n                ),\n              })),\n            };\n          }\n          return {\n            content: (\n              <TreeItem>\n                TreeItem {treeIndex}-{itemIndex}\n              </TreeItem>\n            ),\n          };\n        }),\n      })),\n    [value]\n  );\n  return (\n    <SpaceVertical>\n      <Button onClick={toggle}>Toggle all {value ? 'closed' : 'open'}</Button>\n      <WindowedTreeCollection height={300} width={500} trees={trees} />\n    </SpaceVertical>\n  );\n}\n"],"mappings":";;;;;;AAKA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAH,OAAA;AACA,IAAAI,EAAA,GAAAJ,OAAA;AAA4D,SAAAD,uBAAAM,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAE7C,SAASE,gBAAgBA,CAAA,EAAG;EACzC,IAAAC,UAAA,GAA0B,IAAAC,gBAAS,EAAC,CAAC;IAA7BC,KAAK,GAAAF,UAAA,CAALE,KAAK;IAAEC,MAAM,GAAAH,UAAA,CAANG,MAAM;EAErB,IAAMC,KAAK,GAAGC,iBAAK,CAACC,OAAO,CACzB;IAAA,OACEC,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC,GAAG,CAAC,EAAE,UAACE,CAAC,EAAEC,SAAS;MAAA,OAAM;QACxCC,OAAO,EAAErB,MAAA,YAAAsB,aAAA,CAAChB,EAAA,CAAAiB,IAAI;UAACC,KAAK,UAAAC,MAAA,CAAUL,SAAS;QAAG,CAAE,CAAC;QAC7CM,MAAM,EAAEd,KAAK;QACbe,KAAK,EAAEV,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC,EAAE,CAAC,EAAE,UAACE,CAAC,EAAES,SAAS,EAAK;UAC7C,IAAIA,SAAS,KAAK,CAAC,EAAE;YACnB,OAAO;cACLP,OAAO,EAAErB,MAAA,YAAAsB,aAAA,CAAChB,EAAA,CAAAiB,IAAI;gBAACC,KAAK,iBAAAC,MAAA,CAAiBL,SAAS,OAAAK,MAAA,CAAIG,SAAS;cAAG,CAAE,CAAC;cACjEF,MAAM,EAAEd,KAAK;cACbe,KAAK,EAAEV,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,EAAE,UAACE,CAAC,EAAEU,cAAc;gBAAA,OAAM;kBAClDR,OAAO,EACLrB,MAAA,YAAAsB,aAAA,CAAChB,EAAA,CAAAwB,QAAQ,QAAC,kBACQ,EAACV,SAAS,EAAC,GAAC,EAACQ,SAAS,EAAC,GAAC,EAACC,cACjC;gBAEd,CAAC;cAAA,CAAC;YACJ,CAAC;UACH;UACA,OAAO;YACLR,OAAO,EACLrB,MAAA,YAAAsB,aAAA,CAAChB,EAAA,CAAAwB,QAAQ,QAAC,WACC,EAACV,SAAS,EAAC,GAAC,EAACQ,SACd;UAEd,CAAC;QACH,CAAC;MACH,CAAC;IAAA,CAAC,CAAC;EAAA,GACL,CAAChB,KAAK,CACR,CAAC;EACD,OACEZ,MAAA,YAAAsB,aAAA,CAAClB,OAAA,CAAA2B,aAAa,QACZ/B,MAAA,YAAAsB,aAAA,CAACnB,OAAA,CAAA6B,MAAM;IAACC,OAAO,EAAEpB;EAAO,GAAC,aAAW,EAACD,KAAK,GAAG,QAAQ,GAAG,MAAe,CAAC,EACxEZ,MAAA,YAAAsB,aAAA,CAAChB,EAAA,CAAA4B,sBAAsB;IAACC,MAAM,EAAE,GAAI;IAACC,KAAK,EAAE,GAAI;IAACtB,KAAK,EAAEA;EAAM,CAAE,CACnD,CAAC;AAEpB"}