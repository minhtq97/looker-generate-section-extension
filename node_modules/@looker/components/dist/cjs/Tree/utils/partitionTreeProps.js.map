{"version":3,"file":"partitionTreeProps.js","names":["_types","require","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","isArray","partitionTreeProps","props","treeItemInnerProps","accordionInnerProps","entries","forEach","prop","_prop","propKey","propValue","isTreeItemInnerPropKey","exports"],"sources":["../../../../src/Tree/utils/partitionTreeProps.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { isTreeItemInnerPropKey } from '../types';\n\nexport const partitionTreeProps = (\n  props: Readonly<Record<string, unknown>>\n) => {\n  const treeItemInnerProps: Record<string, unknown> = {};\n  const accordionInnerProps: Record<string, unknown> = {};\n\n  Object.entries(props).forEach(prop => {\n    const [propKey, propValue] = prop;\n    if (props && isTreeItemInnerPropKey(propKey)) {\n      treeItemInnerProps[propKey] = propValue;\n    } else {\n      accordionInnerProps[propKey] = propValue;\n    }\n  });\n\n  return [treeItemInnerProps, accordionInnerProps];\n};\n"],"mappings":"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"}