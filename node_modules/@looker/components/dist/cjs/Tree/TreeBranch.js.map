{"version":3,"file":"TreeBranch.js","names":["_react","_interopRequireWildcard","require","_styledComponents","_interopRequireDefault","_TreeContext","_utils","_templateObject","_templateObject2","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","value","TreeBranchLayout","_ref","children","className","_useContext","useContext","TreeContext","depth","density","createElement","TreeBranchIndentSpacer","styled","div","withConfig","displayName","componentId","generateIndent","TreeBranch","exports"],"sources":["../../../src/Tree/TreeBranch.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useContext } from 'react';\nimport type { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport { TreeContext } from './TreeContext';\nimport { generateIndent } from './utils';\n\nexport interface TreeBranchProps {\n  className?: string;\n  children?: ReactNode;\n}\n\nconst TreeBranchLayout = ({ children, className }: TreeBranchProps) => {\n  const { depth, density } = useContext(TreeContext);\n  return (\n    <TreeBranchIndentSpacer\n      className={className}\n      /**\n       * Child items should be +1 depth more than their parents so that their label\n       * aligns with the label of the parent as opposed to the indicator\n       */\n      depth={depth + 1}\n      density={density}\n    >\n      {children}\n    </TreeBranchIndentSpacer>\n  );\n};\n\nconst TreeBranchIndentSpacer = styled.div`\n  ${generateIndent}\n`;\n\nexport const TreeBranch = styled(TreeBranchLayout)``;\n"],"mappings":"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"}