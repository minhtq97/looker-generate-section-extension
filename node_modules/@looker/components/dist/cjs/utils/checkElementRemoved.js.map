{"version":3,"file":"checkElementRemoved.js","names":["checkElementRemoved","mutationsList","element","some","_ref","type","removedNodes","length","Array","from","node","contains","exports"],"sources":["../../../src/utils/checkElementRemoved.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\n/**\n * Checks a list of mutations against an element\n * and returns true if it was removed\n * @param mutationsList the list of mutations from a MutationObserver\n * @param element\n */\nexport const checkElementRemoved = (\n  mutationsList: MutationRecord[],\n  element?: HTMLElement\n) => {\n  if (!element) return false;\n  return mutationsList.some(({ type, removedNodes }) => {\n    if (type === 'childList' && removedNodes.length > 0) {\n      return Array.from(removedNodes).some(node => {\n        return node.contains(element);\n      });\n    }\n    return false;\n  });\n};\n"],"mappings":";;;;;;AAWO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAC9BC,aAA+B,EAC/BC,OAAqB,EAClB;EACH,IAAI,CAACA,OAAO,EAAE,OAAO,KAAK;EAC1B,OAAOD,aAAa,CAACE,IAAI,CAAC,UAAAC,IAAA,EAA4B;IAAA,IAAzBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;MAAEC,YAAY,GAAAF,IAAA,CAAZE,YAAY;IAC7C,IAAID,IAAI,KAAK,WAAW,IAAIC,YAAY,CAACC,MAAM,GAAG,CAAC,EAAE;MACnD,OAAOC,KAAK,CAACC,IAAI,CAACH,YAAY,CAAC,CAACH,IAAI,CAAC,UAAAO,IAAI,EAAI;QAC3C,OAAOA,IAAI,CAACC,QAAQ,CAACT,OAAO,CAAC;MAC/B,CAAC,CAAC;IACJ;IACA,OAAO,KAAK;EACd,CAAC,CAAC;AACJ,CAAC;AAACU,OAAA,CAAAZ,mBAAA,GAAAA,mBAAA"}