{"version":3,"file":"Breakpoint.js","names":["_react","_interopRequireWildcard","require","_designTokens","_isArray","_interopRequireDefault","_styledComponents","_utils","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","isArray","Breakpoint","_ref","children","show","_ref2","_ref3","_ref3$","_ref3$2","to","_useState","useState","document","body","clientWidth","_useState2","screenWidth","setScreenWidth","theme","useTheme","breakpointPx","breakpoints","map","b","convertRemToPx","parseInt","replace","fromIndex","indexOf","BreakpointRamp","toIndex","handleResize","useCallback","useResize","screenMin","screenMax","Infinity","createElement","Fragment","exports"],"sources":["../../../src/Breakpoint/Breakpoint.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useCallback, useState } from 'react';\nimport type { ReactNode } from 'react';\nimport type { NamedBreakpoints } from '@looker/design-tokens';\nimport { convertRemToPx, BreakpointRamp } from '@looker/design-tokens';\nimport isArray from 'lodash/isArray';\nimport { useTheme } from 'styled-components';\nimport { useResize } from '../utils';\n\nexport interface BreakpointProps {\n  /*\n   * Define a single screen size or range of screen sizes to render the children.\n   */\n  show: NamedBreakpoints | [NamedBreakpoints?, NamedBreakpoints?];\n  children?: ReactNode;\n}\n\nexport const Breakpoint = ({ children, show }: BreakpointProps) => {\n  // Define screen size range.\n  // If they pass a single value, e.g. 'mobile', it should be equivalent to\n  // \"from mobile, to mobile\"\n  const [from = 'mobile', to = 'xl'] = isArray(show) ? show : [show, show];\n  const [screenWidth, setScreenWidth] = useState(\n    typeof document === 'undefined' ? 800 : document.body.clientWidth\n  );\n  const theme = useTheme();\n  const breakpointPx = theme.breakpoints.map((b: string) =>\n    convertRemToPx(parseInt(b.replace('rem', '')))\n  );\n\n  const fromIndex = theme.breakpoints.indexOf(BreakpointRamp[from]);\n  const toIndex = theme.breakpoints.indexOf(BreakpointRamp[to]);\n\n  const handleResize = useCallback(() => {\n    // document is not available in server side rendering\n    if (typeof document === 'undefined') return;\n    setScreenWidth(document.body.clientWidth);\n  }, []);\n\n  useResize(\n    typeof document === 'undefined' ? null : document.body,\n    handleResize\n  );\n\n  const screenMin = from === 'mobile' ? 0 : breakpointPx[fromIndex - 1]; // mobile screens start at 0px\n  const screenMax = to === 'xl' ? Infinity : breakpointPx[toIndex]; // xl includes xl breakpoint and above\n\n  return (\n    <>{screenWidth > screenMin && screenWidth <= screenMax ? children : null}</>\n  );\n};\n"],"mappings":"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"}