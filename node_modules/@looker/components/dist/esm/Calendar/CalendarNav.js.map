{"version":3,"file":"CalendarNav.js","names":["React","ChevronLeft","ChevronRight","ArrowDropDown","getMonth","setMonth","ButtonTransparent","IconButton","Space","useTranslation","formatDateString","CalendarNav","locale","monthYear","onMonthChange","onOpenMonthPicker","t","handleNextMonth","handlePreviousMonth","createElement","py","px","color","iconAfter","onClick","size","justify","gap","icon","label"],"sources":["../../../src/Calendar/CalendarNav.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react';\nimport { ChevronLeft } from '@styled-icons/material-rounded/ChevronLeft/ChevronLeft';\nimport { ChevronRight } from '@styled-icons/material-rounded/ChevronRight/ChevronRight';\nimport { ArrowDropDown } from '@styled-icons/material/ArrowDropDown/ArrowDropDown';\nimport { getMonth, setMonth } from 'date-fns';\nimport { ButtonTransparent, IconButton } from '../Button';\nimport { Space } from '../Layout';\nimport { useTranslation } from '../utils';\nimport type { CalendarLocaleProps, NavCB } from './types';\nimport { formatDateString } from './utils';\n\nexport type CalendarNavProps = Pick<CalendarLocaleProps, 'locale'> & {\n  monthYear: Date;\n  onMonthChange: NavCB;\n  onOpenMonthPicker: () => void;\n};\n\nexport const CalendarNav = ({\n  locale,\n  monthYear,\n  onMonthChange,\n  onOpenMonthPicker,\n}: CalendarNavProps) => {\n  const { t } = useTranslation('CalendarNav');\n\n  const handleNextMonth = () => {\n    onMonthChange &&\n      onMonthChange(setMonth(monthYear, getMonth(monthYear) + 1));\n  };\n\n  const handlePreviousMonth = () => {\n    onMonthChange &&\n      onMonthChange(setMonth(monthYear, getMonth(monthYear) - 1));\n  };\n\n  return (\n    <Space py=\"u3\" px=\"u4\">\n      <ButtonTransparent\n        color=\"neutral\"\n        iconAfter={<ArrowDropDown />}\n        onClick={onOpenMonthPicker}\n        size=\"xsmall\"\n      >\n        {formatDateString(monthYear, 'MMM yyyy', locale)}\n      </ButtonTransparent>\n      <Space justify=\"end\" gap=\"xsmall\">\n        <IconButton\n          icon={<ChevronLeft />}\n          label={t('previous month')}\n          onClick={handlePreviousMonth}\n        />\n\n        <IconButton\n          icon={<ChevronRight />}\n          label={t('next month')}\n          onClick={handleNextMonth}\n        />\n      </Space>\n    </Space>\n  );\n};\n"],"mappings":"AAIA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,wDAAwD;AACpF,SAASC,YAAY,QAAQ,0DAA0D;AACvF,SAASC,aAAa,QAAQ,oDAAoD;AAClF,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,UAAU;AAC7C,SAASC,iBAAiB,EAAEC,UAAU,QAAQ,WAAW;AACzD,SAASC,KAAK,QAAQ,WAAW;AACjC,SAASC,cAAc,QAAQ,UAAU;AAEzC,SAASC,gBAAgB,QAAQ,SAAS;AAQ1C,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAC1BC,MAAM;EACNC,SAAS;EACTC,aAAa;EACbC;AACgB,CAAC,KAAK;EACtB,MAAM;IAAEC;EAAE,CAAC,GAAGP,cAAc,CAAC,aAAa,CAAC;EAE3C,MAAMQ,eAAe,GAAGA,CAAA,KAAM;IAC5BH,aAAa,IACXA,aAAa,CAACT,QAAQ,CAACQ,SAAS,EAAET,QAAQ,CAACS,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMK,mBAAmB,GAAGA,CAAA,KAAM;IAChCJ,aAAa,IACXA,aAAa,CAACT,QAAQ,CAACQ,SAAS,EAAET,QAAQ,CAACS,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;EAC/D,CAAC;EAED,OACEb,KAAA,CAAAmB,aAAA,CAACX,KAAK;IAACY,EAAE,EAAC,IAAI;IAACC,EAAE,EAAC;EAAI,GACpBrB,KAAA,CAAAmB,aAAA,CAACb,iBAAiB;IAChBgB,KAAK,EAAC,SAAS;IACfC,SAAS,EAAEvB,KAAA,CAAAmB,aAAA,CAAChB,aAAa,MAAE,CAAE;IAC7BqB,OAAO,EAAET,iBAAkB;IAC3BU,IAAI,EAAC;EAAQ,GAEZf,gBAAgB,CAACG,SAAS,EAAE,UAAU,EAAED,MAAM,CAC9B,CAAC,EACpBZ,KAAA,CAAAmB,aAAA,CAACX,KAAK;IAACkB,OAAO,EAAC,KAAK;IAACC,GAAG,EAAC;EAAQ,GAC/B3B,KAAA,CAAAmB,aAAA,CAACZ,UAAU;IACTqB,IAAI,EAAE5B,KAAA,CAAAmB,aAAA,CAAClB,WAAW,MAAE,CAAE;IACtB4B,KAAK,EAAEb,CAAC,CAAC,gBAAgB,CAAE;IAC3BQ,OAAO,EAAEN;EAAoB,CAC9B,CAAC,EAEFlB,KAAA,CAAAmB,aAAA,CAACZ,UAAU;IACTqB,IAAI,EAAE5B,KAAA,CAAAmB,aAAA,CAACjB,YAAY,MAAE,CAAE;IACvB2B,KAAK,EAAEb,CAAC,CAAC,YAAY,CAAE;IACvBQ,OAAO,EAAEP;EAAgB,CAC1B,CACI,CACF,CAAC;AAEZ,CAAC"}