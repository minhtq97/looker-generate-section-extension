{"version":3,"file":"MixedStates.js","names":["React","useState","UnorderedList","FieldCheckbox","useMixedStateCheckbox","MixedStates","parentState","setParentState","appleState","setAppleState","bananaState","setBananaState","handleAppleChange","handleBananaChange","fruitTree","children","setState","state","parent","handleParentChange","createElement","label","value","onChange","checked","pl"],"sources":["../../../../../../src/Form/Inputs/Checkbox/stories/MixedStates.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useState } from 'react';\nimport { UnorderedList } from '../../../../UnorderedList';\nimport { FieldCheckbox } from '../../../Fields';\nimport { useMixedStateCheckbox } from '../useMixedStateCheckbox';\nimport type { MixedBoolean } from '../Checkbox';\n\nexport default function MixedStates() {\n  // Set up local state and child change handlers\n  const [parentState, setParentState] = useState(false as MixedBoolean);\n  const [appleState, setAppleState] = useState(false as MixedBoolean);\n  const [bananaState, setBananaState] = useState(true as MixedBoolean);\n  const handleAppleChange = () => setAppleState(!appleState);\n  const handleBananaChange = () => setBananaState(!bananaState);\n\n  // Establish checkbox hierarchy for use in custom hook\n  const fruitTree = {\n    children: [\n      { setState: setAppleState, state: appleState },\n      { setState: setBananaState, state: bananaState },\n    ],\n    parent: {\n      setState: setParentState,\n      state: parentState,\n    },\n  };\n\n  // Sync parent/child states and get provided parent change handler\n  const handleParentChange = useMixedStateCheckbox(fruitTree);\n\n  return (\n    <UnorderedList>\n      <li>\n        <FieldCheckbox\n          label=\"All Fruit\"\n          value=\"all-fruit\"\n          onChange={handleParentChange}\n          checked={parentState}\n        />\n      </li>\n      <li>\n        <UnorderedList pl=\"u5\">\n          <li>\n            <FieldCheckbox\n              label=\"🍏\"\n              value=\"apple\"\n              onChange={handleAppleChange}\n              checked={appleState}\n            />\n          </li>\n          <li>\n            <FieldCheckbox\n              value=\"apple\"\n              onChange={handleBananaChange}\n              checked={bananaState}\n              label=\"🍌\"\n            />\n          </li>\n        </UnorderedList>\n      </li>\n    </UnorderedList>\n  );\n}\n"],"mappings":"AAKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,qBAAqB,QAAQ,0BAA0B;AAGhE,eAAe,SAASC,WAAWA,CAAA,EAAG;EAEpC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,KAAqB,CAAC;EACrE,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAqB,CAAC;EACnE,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAoB,CAAC;EACpE,MAAMW,iBAAiB,GAAGA,CAAA,KAAMH,aAAa,CAAC,CAACD,UAAU,CAAC;EAC1D,MAAMK,kBAAkB,GAAGA,CAAA,KAAMF,cAAc,CAAC,CAACD,WAAW,CAAC;EAG7D,MAAMI,SAAS,GAAG;IAChBC,QAAQ,EAAE,CACR;MAAEC,QAAQ,EAAEP,aAAa;MAAEQ,KAAK,EAAET;IAAW,CAAC,EAC9C;MAAEQ,QAAQ,EAAEL,cAAc;MAAEM,KAAK,EAAEP;IAAY,CAAC,CACjD;IACDQ,MAAM,EAAE;MACNF,QAAQ,EAAET,cAAc;MACxBU,KAAK,EAAEX;IACT;EACF,CAAC;EAGD,MAAMa,kBAAkB,GAAGf,qBAAqB,CAACU,SAAS,CAAC;EAE3D,OACEd,KAAA,CAAAoB,aAAA,CAAClB,aAAa,QACZF,KAAA,CAAAoB,aAAA,aACEpB,KAAA,CAAAoB,aAAA,CAACjB,aAAa;IACZkB,KAAK,EAAC,WAAW;IACjBC,KAAK,EAAC,WAAW;IACjBC,QAAQ,EAAEJ,kBAAmB;IAC7BK,OAAO,EAAElB;EAAY,CACtB,CACC,CAAC,EACLN,KAAA,CAAAoB,aAAA,aACEpB,KAAA,CAAAoB,aAAA,CAAClB,aAAa;IAACuB,EAAE,EAAC;EAAI,GACpBzB,KAAA,CAAAoB,aAAA,aACEpB,KAAA,CAAAoB,aAAA,CAACjB,aAAa;IACZkB,KAAK,EAAC,cAAI;IACVC,KAAK,EAAC,OAAO;IACbC,QAAQ,EAAEX,iBAAkB;IAC5BY,OAAO,EAAEhB;EAAW,CACrB,CACC,CAAC,EACLR,KAAA,CAAAoB,aAAA,aACEpB,KAAA,CAAAoB,aAAA,CAACjB,aAAa;IACZmB,KAAK,EAAC,OAAO;IACbC,QAAQ,EAAEV,kBAAmB;IAC7BW,OAAO,EAAEd,WAAY;IACrBW,KAAK,EAAC;EAAI,CACX,CACC,CACS,CACb,CACS,CAAC;AAEpB"}