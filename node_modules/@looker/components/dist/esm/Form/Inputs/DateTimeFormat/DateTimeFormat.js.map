{"version":3,"file":"DateTimeFormat.js","names":["React","formatDateString","DateTimeFormat","children","Date","now","date","format","locale","time","timeZone","createElement","Fragment","error"],"sources":["../../../../../src/Form/Inputs/DateTimeFormat/DateTimeFormat.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react';\nimport type { Locale } from 'date-fns';\nimport type { DateFormats, DateTimeOptions } from '../../../Calendar/utils';\nimport { formatDateString } from '../../../Calendar/utils';\n\nexport type DateTimeFormatProps = {\n  children?: Date;\n  format?: DateFormats | string;\n  /**\n   * Locale object from date-fns.\n   * @example\n   * import ko from 'date-fns/locale/ko'\n   */\n  locale?: Locale;\n  timeZone?: string;\n};\n\ntype DateTimeFormatExtensionProps = DateTimeFormatProps & DateTimeOptions;\n\nexport const DateTimeFormat = ({\n  children = new Date(Date.now()),\n  date = true,\n  format = 'medium',\n  locale,\n  time = true,\n  timeZone,\n}: DateTimeFormatExtensionProps) => {\n  try {\n    return (\n      <>\n        {formatDateString(children, format, locale, timeZone, { date, time })}\n      </>\n    );\n  } catch (error) {\n    return <>{error}</>;\n  }\n};\n"],"mappings":"AAKA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,gBAAgB,QAAQ,yBAAyB;AAgB1D,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAC7BC,QAAQ,EAARA,SAAQ,GAAG,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;EAC/BC,IAAI,EAAJA,KAAI,GAAG,IAAI;EACXC,MAAM,EAANA,OAAM,GAAG,QAAQ;EACjBC,MAAM;EACNC,IAAI,EAAJA,KAAI,GAAG,IAAI;EACXC;AAC4B,CAAC,KAAK;EAClC,IAAI;IACF,OACEV,KAAA,CAAAW,aAAA,CAAAX,KAAA,CAAAY,QAAA,QACGX,gBAAgB,CAACE,SAAQ,EAAEI,OAAM,EAAEC,MAAM,EAAEE,QAAQ,EAAE;MAAEJ,IAAI,EAAJA,KAAI;MAAEG,IAAI,EAAJA;IAAK,CAAC,CACpE,CAAC;EAEP,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,OAAOb,KAAA,CAAAW,aAAA,CAAAX,KAAA,CAAAY,QAAA,QAAGC,KAAQ,CAAC;EACrB;AACF,CAAC"}