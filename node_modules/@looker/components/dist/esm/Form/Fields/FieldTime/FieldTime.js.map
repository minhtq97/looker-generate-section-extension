{"version":3,"file":"FieldTime.js","names":["React","forwardRef","styled","FloatingLabelField","omitFieldProps","pickFieldProps","getHasValue","useFormContext","useID","InputTime","checkValueOnBlur","e","target","currentTarget","inputs","Array","from","querySelectorAll","some","input","value","FieldTimeComponent","props","ref","validationMessage","id","createElement","_extends","hasValue","width","validationType","type","FieldTime","withConfig","displayName","componentId","_t","_"],"sources":["../../../../../src/Form/Fields/FieldTime/FieldTime.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { FocusEvent, Ref } from 'react';\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport type { FloatingLabelFieldProps } from '../Field/types';\nimport { FloatingLabelField, omitFieldProps, pickFieldProps } from '../Field';\nimport { getHasValue } from '../Field/useFloatingLabel';\nimport { useFormContext } from '../../Form';\nimport { useID } from '../../../utils';\nimport type { InputTimeProps } from '../../Inputs/InputTime';\nimport { InputTime } from '../../Inputs/InputTime';\n\nexport interface FieldTimeProps\n  extends FloatingLabelFieldProps,\n    InputTimeProps {}\n\nconst checkValueOnBlur = (e: FocusEvent) => {\n  const target = e.currentTarget;\n  const inputs = Array.from(target.querySelectorAll('input'));\n  // Check all 3 inputs for a value\n  return inputs.some(input => input.value !== '');\n};\n\nconst FieldTimeComponent = forwardRef(\n  (props: FieldTimeProps, ref: Ref<HTMLInputElement>) => {\n    const validationMessage = useFormContext(props);\n    const id = useID(props.id);\n    return (\n      <FloatingLabelField\n        {...pickFieldProps(props)}\n        id={id}\n        validationMessage={validationMessage}\n        hasValue={getHasValue(props)}\n        checkValueOnBlur={checkValueOnBlur}\n      >\n        <InputTime\n          {...omitFieldProps(props)}\n          width=\"100%\"\n          aria-describedby={`describedby-${id}`}\n          aria-labelledby={`labelledby-${id}`}\n          id={id}\n          validationType={validationMessage && validationMessage.type}\n          ref={ref}\n        />\n      </FloatingLabelField>\n    );\n  }\n);\n\nexport const FieldTime = styled(FieldTimeComponent)``;\n"],"mappings":";;;AAMA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,SAASC,kBAAkB,EAAEC,cAAc,EAAEC,cAAc,QAAQ,UAAU;AAC7E,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,cAAc,QAAQ,YAAY;AAC3C,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,SAASC,SAAS,QAAQ,wBAAwB;AAMlD,MAAMC,gBAAgB,GAAIC,CAAa,IAAK;EAC1C,MAAMC,MAAM,GAAGD,CAAC,CAACE,aAAa;EAC9B,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAACJ,MAAM,CAACK,gBAAgB,CAAC,OAAO,CAAC,CAAC;EAE3D,OAAOH,MAAM,CAACI,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,KAAK,EAAE,CAAC;AACjD,CAAC;AAED,MAAMC,kBAAkB,GAAGpB,UAAU,CACnC,CAACqB,KAAqB,EAAEC,GAA0B,KAAK;EACrD,MAAMC,iBAAiB,GAAGjB,cAAc,CAACe,KAAK,CAAC;EAC/C,MAAMG,EAAE,GAAGjB,KAAK,CAACc,KAAK,CAACG,EAAE,CAAC;EAC1B,OACEzB,KAAA,CAAA0B,aAAA,CAACvB,kBAAkB,EAAAwB,QAAA,KACbtB,cAAc,CAACiB,KAAK,CAAC;IACzBG,EAAE,EAAEA,EAAG;IACPD,iBAAiB,EAAEA,iBAAkB;IACrCI,QAAQ,EAAEtB,WAAW,CAACgB,KAAK,CAAE;IAC7BZ,gBAAgB,EAAEA;EAAiB,IAEnCV,KAAA,CAAA0B,aAAA,CAACjB,SAAS,EAAAkB,QAAA,KACJvB,cAAc,CAACkB,KAAK,CAAC;IACzBO,KAAK,EAAC,MAAM;IACZ,oBAAmB,eAAcJ,EAAG,EAAE;IACtC,mBAAkB,cAAaA,EAAG,EAAE;IACpCA,EAAE,EAAEA,EAAG;IACPK,cAAc,EAAEN,iBAAiB,IAAIA,iBAAiB,CAACO,IAAK;IAC5DR,GAAG,EAAEA;EAAI,EACV,CACiB,CAAC;AAEzB,CACF,CAAC;AAED,OAAO,MAAMS,SAAS,GAAG9B,MAAM,CAACmB,kBAAkB,CAAC,CAAAY,UAAA;EAAAC,WAAA;EAAAC,WAAA;AAAA,GAAAC,EAAA,KAAAA,EAAA,GAAAC,CAAC,IAAC"}