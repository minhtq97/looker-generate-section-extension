{"version":3,"file":"useSafeSetState.js","names":["useState","useCallback","useMounted","useSafeSetState","initialState","state","setState","mounted","safeSetState","value","current"],"sources":["../../../src/utils/useSafeSetState.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { useState, useCallback } from 'react';\nimport { useMounted } from './';\n\n/**\n * An alternative utility hook to React.useState, this function\n * only updates state when the parent component is mounted.\n *\n * Prevents async setState errors and memory leaks.\n * @param initialState any data needed to be stored in state\n * @returns [currentState, stateUpdater]\n */\nexport const useSafeSetState = <T>(initialState: T): [T, (arg: T) => void] => {\n  const [state, setState] = useState(initialState);\n  const mounted = useMounted();\n\n  const safeSetState = useCallback(\n    (value: T) => {\n      if (mounted.current) setState(value);\n    },\n    [mounted]\n  );\n\n  return [state, safeSetState];\n};\n"],"mappings":"AAKA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,UAAU,QAAQ,IAAI;AAU/B,OAAO,MAAMC,eAAe,GAAOC,YAAe,IAA4B;EAC5E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACI,YAAY,CAAC;EAChD,MAAMG,OAAO,GAAGL,UAAU,CAAC,CAAC;EAE5B,MAAMM,YAAY,GAAGP,WAAW,CAC7BQ,KAAQ,IAAK;IACZ,IAAIF,OAAO,CAACG,OAAO,EAAEJ,QAAQ,CAACG,KAAK,CAAC;EACtC,CAAC,EACD,CAACF,OAAO,CACV,CAAC;EAED,OAAO,CAACF,KAAK,EAAEG,YAAY,CAAC;AAC9B,CAAC"}