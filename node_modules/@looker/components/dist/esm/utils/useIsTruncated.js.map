{"version":3,"file":"useIsTruncated.js","names":["useState","useCallback","useSafeLayoutEffect","isOverflowing","useIsTruncated","element","identity","isTruncated","setIsTruncated","handleResize","resizeObserver","ResizeObserver","observe","disconnect"],"sources":["../../../src/utils/useIsTruncated.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { useState, useCallback } from 'react';\nimport { useSafeLayoutEffect } from './useSafeLayoutEffect';\nimport { isOverflowing } from './isOverflowing';\n\n/**\n * Detects if an element's content overflows its width using a ResizeObserver.\n * Avoid using repeatedly in long lists for performance concerns.\n */\nexport const useIsTruncated = (\n  element: HTMLElement | null,\n  identity?: number\n): boolean => {\n  const [isTruncated, setIsTruncated] = useState(false);\n\n  // Re-run truncation detection when element is resized.\n  // Could run on window resize or just dom element change\n  // thanks to Resize Observer.\n  const handleResize = useCallback(() => {\n    if (!element) return;\n    setIsTruncated(isOverflowing(element));\n  }, [element]);\n\n  useSafeLayoutEffect(() => {\n    if (!element) return;\n\n    const resizeObserver = new ResizeObserver(handleResize);\n    resizeObserver.observe(element);\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [handleResize, element, identity]);\n\n  return isTruncated;\n};\n"],"mappings":"AAKA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,aAAa,QAAQ,iBAAiB;AAM/C,OAAO,MAAMC,cAAc,GAAGA,CAC5BC,OAA2B,EAC3BC,QAAiB,KACL;EACZ,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAKrD,MAAMS,YAAY,GAAGR,WAAW,CAAC,MAAM;IACrC,IAAI,CAACI,OAAO,EAAE;IACdG,cAAc,CAACL,aAAa,CAACE,OAAO,CAAC,CAAC;EACxC,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEbH,mBAAmB,CAAC,MAAM;IACxB,IAAI,CAACG,OAAO,EAAE;IAEd,MAAMK,cAAc,GAAG,IAAIC,cAAc,CAACF,YAAY,CAAC;IACvDC,cAAc,CAACE,OAAO,CAACP,OAAO,CAAC;IAE/B,OAAO,MAAM;MACXK,cAAc,CAACG,UAAU,CAAC,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,CAACJ,YAAY,EAAEJ,OAAO,EAAEC,QAAQ,CAAC,CAAC;EAErC,OAAOC,WAAW;AACpB,CAAC"}