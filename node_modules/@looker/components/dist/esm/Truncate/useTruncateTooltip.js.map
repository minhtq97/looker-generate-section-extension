{"version":3,"file":"useTruncateTooltip.js","names":["React","Span","useTooltip","isOverflowing","useTruncateTooltip","children","description","element","canOpen","triggerElement","undefined","content","createElement","Fragment","color","invert","placement","textAlign","width"],"sources":["../../../src/Truncate/useTruncateTooltip.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react';\nimport type { ReactNode } from 'react';\nimport { Span } from '../Text/Span';\nimport { useTooltip } from '../Tooltip';\nimport { isOverflowing } from '../utils';\n\nexport type UseTruncateTooltipProps = {\n  children: ReactNode;\n  description?: string;\n  element?: HTMLElement | null;\n};\n\nexport const useTruncateTooltip = ({\n  children,\n  description,\n  element,\n}: UseTruncateTooltipProps) => {\n  return useTooltip({\n    // only render tooltip if text actually overflows (or if there's a description)\n    canOpen: (triggerElement: HTMLElement) =>\n      description !== undefined || isOverflowing(element || triggerElement),\n    content: (\n      <>\n        {children}\n        {description && (\n          <>\n            <br />\n            <Span color=\"text2\">{description}</Span>\n          </>\n        )}\n      </>\n    ),\n    invert: false,\n    placement: 'top-start',\n    textAlign: 'left',\n    width: 'auto',\n  });\n};\n"],"mappings":"AAKA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,UAAU,QAAQ,YAAY;AACvC,SAASC,aAAa,QAAQ,UAAU;AAQxC,OAAO,MAAMC,kBAAkB,GAAGA,CAAC;EACjCC,QAAQ;EACRC,WAAW;EACXC;AACuB,CAAC,KAAK;EAC7B,OAAOL,UAAU,CAAC;IAEhBM,OAAO,EAAGC,cAA2B,IACnCH,WAAW,KAAKI,SAAS,IAAIP,aAAa,CAACI,OAAO,IAAIE,cAAc,CAAC;IACvEE,OAAO,EACLX,KAAA,CAAAY,aAAA,CAAAZ,KAAA,CAAAa,QAAA,QACGR,QAAQ,EACRC,WAAW,IACVN,KAAA,CAAAY,aAAA,CAAAZ,KAAA,CAAAa,QAAA,QACEb,KAAA,CAAAY,aAAA,WAAK,CAAC,EACNZ,KAAA,CAAAY,aAAA,CAACX,IAAI;MAACa,KAAK,EAAC;IAAO,GAAER,WAAkB,CACvC,CAEJ,CACH;IACDS,MAAM,EAAE,KAAK;IACbC,SAAS,EAAE,WAAW;IACtBC,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE;EACT,CAAC,CAAC;AACJ,CAAC"}