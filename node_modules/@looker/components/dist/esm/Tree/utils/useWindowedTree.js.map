{"version":3,"file":"useWindowedTree.js","names":["React","useCallback","useEffect","useReducer","listItemDimensions","useWindow","WindowedTreeNode","windowedTreeReducer","getWindowedTreeNodeFilterer","useWindowedTreeState","trees","map","shownIDs","treesWithIDs","dispatch","payload","type","toggleNode","id","isOpen","useWindowedTree","density","height","_useWindow","enabled","length","itemCount","itemHeight","ref","windowResult","_objectWithoutProperties","_excluded","content","getWindowedTreeContent","_objectSpread","contextValue","toggleStateMap","start","end","before","after","firstIDinWindow","lastIDinWindow","nodesInWindow","every","createElement","Fragment","tree","_extends","key"],"sources":["../../../../src/Tree/utils/useWindowedTree.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport type { DensityProp } from '@looker/design-tokens';\nimport type { Ref } from 'react';\nimport React, { useCallback, useEffect, useReducer } from 'react';\nimport { listItemDimensions } from '../../ListItem';\nimport { useWindow } from '../../utils';\nimport type { WindowResult } from '../../utils';\nimport type { WindowedTreeNodeProps, WindowedTreeNodeIDProps } from '../types';\nimport { WindowedTreeNode } from '../WindowedTreeNode';\nimport { windowedTreeReducer } from './windowedTreeReducer';\nimport type { WindowedTreeState } from './windowedTreeReducer';\nimport { getWindowedTreeNodeFilterer } from './getWindowedTreeNodeFilterer';\n\nexport type UseWindowedTreeNodeProps = DensityProp & {\n  ref?: Ref<HTMLUListElement>;\n  trees: WindowedTreeNodeProps[];\n};\n\nexport const useWindowedTreeState = ({\n  trees,\n}: Pick<UseWindowedTreeNodeProps, 'trees'>) => {\n  // Keep track of the sub-trees opened / closed state by ID and\n  // the total number of SHOWN items (i.e. no ancestor is closed)\n  const [{ map, shownIDs, treesWithIDs }, dispatch] = useReducer(\n    windowedTreeReducer,\n    {\n      map: {},\n      shownIDs: [],\n      treesWithIDs: [],\n    }\n  );\n\n  useEffect(() => {\n    // If the trees prop has changed, need to reset all state\n    dispatch({ payload: trees, type: 'RESET' });\n  }, [trees]);\n\n  const toggleNode = useCallback((id: number, isOpen: boolean) => {\n    if (isOpen) {\n      dispatch({ payload: id, type: 'OPEN' });\n    } else {\n      dispatch({ payload: id, type: 'CLOSE' });\n    }\n  }, []);\n  return { map, shownIDs, toggleNode, treesWithIDs };\n};\n\nexport const useWindowedTree = ({\n  density = 0,\n  trees,\n}: UseWindowedTreeNodeProps) => {\n  const { map, shownIDs, toggleNode, treesWithIDs } = useWindowedTreeState({\n    trees,\n  });\n  // Get item height from density\n  const { height } = listItemDimensions(density || 0);\n\n  // Get the windowing properties\n  const { ref, ...windowResult } = useWindow({\n    enabled: shownIDs.length > 100,\n    itemCount: shownIDs.length,\n    itemHeight: height,\n  });\n\n  return {\n    content: getWindowedTreeContent({\n      ...windowResult,\n      shownIDs,\n      treesWithIDs,\n    }),\n    contextValue: { density, toggleNode, toggleStateMap: map },\n    ref,\n  };\n};\n\nexport const getWindowedTreeContent = ({\n  shownIDs,\n  treesWithIDs,\n  start,\n  end,\n  before,\n  after,\n}: Omit<WindowedTreeState, 'map'> & WindowResult) => {\n  if (treesWithIDs) {\n    // Find the tree nodes that are within the window\n    const firstIDinWindow = shownIDs[start];\n    const lastIDinWindow = shownIDs[end];\n    const nodesInWindow: WindowedTreeNodeIDProps[] = [];\n    treesWithIDs.every(\n      getWindowedTreeNodeFilterer(\n        nodesInWindow,\n        firstIDinWindow,\n        lastIDinWindow\n      )\n    );\n\n    return (\n      <>\n        {before}\n        {nodesInWindow.map(tree => (\n          <WindowedTreeNode\n            {...tree}\n            firstIDinWindow={firstIDinWindow}\n            key={tree.id}\n          />\n        ))}\n        {after}\n      </>\n    );\n  }\n  return null;\n};\n"],"mappings":"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"}