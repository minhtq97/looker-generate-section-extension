{"version":3,"file":"listItemBackgroundColor.js","names":["itemSelectedColor","css","isListColor","listItemBackgroundColor","color","colorOnHover","disabled","hovered","propsHovered","ripple","selected","theme","colors","stateColors","all","ui1","ui2","renderedColor","_t","_"],"sources":["../../../../src/ListItem/utils/listItemBackgroundColor.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Colors, Theme } from '@looker/design-tokens';\nimport { itemSelectedColor } from '@looker/design-tokens';\nimport { css } from 'styled-components';\nimport type { ListItemColorProp, ListItemStatefulProps } from '../types';\nimport { isListColor } from './isListColor';\n\nexport type ListItemBackgroundColorProps = ListItemStatefulProps &\n  ListItemColorProp & {\n    /**\n     * Indicates ripple is enabled and hover should not be used\n     */\n    ripple?: boolean;\n  };\n\n/**\n * @TODO Remove hovered prop and hovered logic when ripple effect\n * is implemented in LkField components. All other ListItem related\n * components (i.e. ListItem, NavTreeItem, TreeItem) all use ripple\n * to handle hover state.\n */\nexport const listItemBackgroundColor = ({\n  color,\n  colorOnHover,\n  disabled,\n  hovered: propsHovered,\n  ripple,\n  selected,\n  theme: { colors },\n}: ListItemBackgroundColorProps & { theme: Theme }) => {\n  const stateColors = isListColor(color)\n    ? {\n        all: colors[`${color}Subtle` as keyof Colors],\n        hovered: colors.ui1,\n        selected: colors[`${color}Subtle` as keyof Colors],\n      }\n    : {\n        all: itemSelectedColor(colors.ui2),\n        hovered: colors.ui1,\n        selected: itemSelectedColor(colors.ui2),\n      };\n\n  let renderedColor;\n  const hovered = !ripple && propsHovered;\n\n  if (disabled) renderedColor = 'transparent';\n  else if (selected && hovered) renderedColor = stateColors.all;\n  else if (selected) renderedColor = stateColors.selected;\n  else if (hovered) renderedColor = stateColors.hovered;\n  else renderedColor = 'transparent';\n\n  return css`\n    background-color: ${renderedColor};\n  `;\n};\n"],"mappings":";;AAMA,SAASA,iBAAiB,QAAQ,uBAAuB;AACzD,SAASC,GAAG,QAAQ,mBAAmB;AAEvC,SAASC,WAAW,QAAQ,eAAe;AAgB3C,OAAO,MAAMC,uBAAuB,GAAGA,CAAC;EACtCC,KAAK;EACLC,YAAY;EACZC,QAAQ;EACRC,OAAO,EAAEC,YAAY;EACrBC,MAAM;EACNC,QAAQ;EACRC,KAAK,EAAE;IAAEC;EAAO;AAC+B,CAAC,KAAK;EACrD,MAAMC,WAAW,GAAGX,WAAW,CAACE,KAAK,CAAC,GAClC;IACEU,GAAG,EAAEF,MAAM,CAAE,GAAER,KAAM,QAAO,CAAiB;IAC7CG,OAAO,EAAEK,MAAM,CAACG,GAAG;IACnBL,QAAQ,EAAEE,MAAM,CAAE,GAAER,KAAM,QAAO;EACnC,CAAC,GACD;IACEU,GAAG,EAAEd,iBAAiB,CAACY,MAAM,CAACI,GAAG,CAAC;IAClCT,OAAO,EAAEK,MAAM,CAACG,GAAG;IACnBL,QAAQ,EAAEV,iBAAiB,CAACY,MAAM,CAACI,GAAG;EACxC,CAAC;EAEL,IAAIC,aAAa;EACjB,MAAMV,OAAO,GAAG,CAACE,MAAM,IAAID,YAAY;EAEvC,IAAIF,QAAQ,EAAEW,aAAa,GAAG,aAAa,CAAC,KACvC,IAAIP,QAAQ,IAAIH,OAAO,EAAEU,aAAa,GAAGJ,WAAW,CAACC,GAAG,CAAC,KACzD,IAAIJ,QAAQ,EAAEO,aAAa,GAAGJ,WAAW,CAACH,QAAQ,CAAC,KACnD,IAAIH,OAAO,EAAEU,aAAa,GAAGJ,WAAW,CAACN,OAAO,CAAC,KACjDU,aAAa,GAAG,aAAa;EAElC,OAAOhB,GAAG,CAAAiB,EAAA,KAAAA,EAAA,GAAAC,CAAC;AACb,wBAAsB,CAAgB;AACtC,GAAE,GADsBF,aAAa;AAErC,CAAC"}