{"version":3,"file":"Panel.js","names":["React","isValidElement","cloneElement","usePanel","isRenderProp","children","Panel","_ref","content","props","_objectWithoutProperties","_excluded","domProps","panel","_objectSpread","console","warn","createElement","Fragment"],"sources":["../../../src/Panel/Panel.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { ReactNode } from 'react';\nimport React, { isValidElement, cloneElement } from 'react';\nimport type { PanelProps, PanelRenderProp } from './types';\nimport { usePanel } from './usePanel';\n\nconst isRenderProp = (\n  children: ReactNode | PanelRenderProp\n): children is PanelRenderProp => typeof children === 'function';\n\nexport const Panel = ({ children, content, ...props }: PanelProps) => {\n  const { domProps, panel } = usePanel({ content, ...props });\n\n  if (isValidElement(children)) {\n    children = cloneElement(children, {\n      ...domProps,\n    });\n  } else if (isRenderProp(children)) {\n    children = children(domProps);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Element \"${typeof children}\" can't be used as target for Panel`\n    );\n  }\n\n  return (\n    <>\n      {children}\n      {panel}\n    </>\n  );\n};\n"],"mappings":";;;;;;;;AAMA,OAAOA,KAAK,IAAIC,cAAc,EAAEC,YAAY,QAAQ,OAAO;AAE3D,SAASC,QAAQ,QAAQ,YAAY;AAErC,MAAMC,YAAY,GAChBC,QAAqC,IACL,OAAOA,QAAQ,KAAK,UAAU;AAEhE,OAAO,MAAMC,KAAK,GAAGC,IAAA,IAAiD;EAAA,IAAhD;MAAEF,QAAQ;MAAEG;IAA8B,CAAC,GAAAD,IAAA;IAAnBE,KAAK,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;EACjD,MAAM;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAGV,QAAQ,CAAAW,aAAA;IAAGN;EAAO,GAAKC,KAAK,CAAE,CAAC;EAE3D,IAAIR,cAAc,CAACI,QAAQ,CAAC,EAAE;IAC5BA,QAAQ,GAAGH,YAAY,CAACG,QAAQ,EAAAS,aAAA,KAC3BF,QAAQ,CACZ,CAAC;EACJ,CAAC,MAAM,IAAIR,YAAY,CAACC,QAAQ,CAAC,EAAE;IACjCA,QAAQ,GAAGA,QAAQ,CAACO,QAAQ,CAAC;EAC/B,CAAC,MAAM;IAELG,OAAO,CAACC,IAAI,CACT,YAAW,OAAOX,QAAS,qCAC9B,CAAC;EACH;EAEA,OACEL,KAAA,CAAAiB,aAAA,CAAAjB,KAAA,CAAAkB,QAAA,QACGb,QAAQ,EACRQ,KACD,CAAC;AAEP,CAAC"}