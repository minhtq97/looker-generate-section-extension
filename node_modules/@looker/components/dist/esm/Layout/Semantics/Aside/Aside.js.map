{"version":3,"file":"Aside.js","names":["React","forwardRef","shouldForwardProp","styled","OverflowShadow","useOverflow","commonLayoutCSS","asideWidth","AsideLayout","_ref","forwardedRef","collapse","children","props","_objectWithoutProperties","_excluded","hasOverflow","ref","createElement","_extends","as","displayName","Aside","withConfig","prop","componentId","attrs","width","_t","_","scrollWithin"],"sources":["../../../../../src/Layout/Semantics/Aside/Aside.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Ref } from 'react';\nimport React, { forwardRef } from 'react';\nimport type {\n  CompatibleHTMLProps,\n  ResponsiveValue,\n} from '@looker/design-tokens';\nimport { shouldForwardProp } from '@looker/design-tokens';\nimport styled from 'styled-components';\nimport { OverflowShadow, useOverflow } from '../../../utils';\nimport type { CommonLayoutProps } from '../../utils/common';\nimport { commonLayoutCSS } from '../../utils/common';\nimport type { AsideSizeRamp } from './asideWidth';\nimport { asideWidth } from './asideWidth';\n\nexport type AsideProps = CommonLayoutProps &\n  CompatibleHTMLProps<HTMLElement> & {\n    /**\n     * Prevent `Aside` from being rendered.\n     * @default false\n     */\n    collapse?: boolean;\n    /**\n     * To be used within the context of `<Page fixed>` container.\n     * When true, this removes the inner overflow-y scrolling\n     * and allows content within a Layout group to scroll together.\n     * @default false\n     */\n    scrollWithin?: boolean;\n    /**\n     * Specify width of aside\n     * @default sidebar\n     */\n    width?: ResponsiveValue<AsideSizeRamp | string>;\n  };\n\nconst AsideLayout = forwardRef(\n  (\n    { collapse, children, ...props }: AsideProps,\n    forwardedRef: Ref<HTMLDivElement>\n  ) => {\n    const [hasOverflow, ref] = useOverflow(forwardedRef);\n\n    return collapse ? null : (\n      <OverflowShadow as=\"aside\" hasOverflow={hasOverflow} ref={ref} {...props}>\n        {children}\n      </OverflowShadow>\n    );\n  }\n);\n\nAsideLayout.displayName = 'AsideLayout';\n\nexport const Aside = styled(AsideLayout)\n  .withConfig<AsideProps>({\n    shouldForwardProp: prop => prop === 'collapse' || shouldForwardProp(prop),\n  })\n  .attrs<AsideProps>(({ width = 'sidebar' }) => ({\n    width,\n  }))<AsideProps>`\n${commonLayoutCSS}\n\nflex: 0 0 ${({ width }) => width};\nmax-width: ${({ width }) => width};\nmin-width: ${({ width }) => width};\noverflow: auto;\nwidth: 0;\n${({ scrollWithin }) => scrollWithin && 'height: fit-content;'}\n\n${asideWidth}`;\n"],"mappings":";;;;;;AAMA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAKzC,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,cAAc,EAAEC,WAAW,QAAQ,gBAAgB;AAE5D,SAASC,eAAe,QAAQ,oBAAoB;AAEpD,SAASC,UAAU,QAAQ,cAAc;AAuBzC,MAAMC,WAAW,GAAGP,UAAU,CAC5B,CAAAQ,IAAA,EAEEC,YAAiC,KAC9B;EAAA,IAFH;MAAEC,QAAQ;MAAEC;IAA+B,CAAC,GAAAH,IAAA;IAAnBI,KAAK,GAAAC,wBAAA,CAAAL,IAAA,EAAAM,SAAA;EAG9B,MAAM,CAACC,WAAW,EAAEC,GAAG,CAAC,GAAGZ,WAAW,CAACK,YAAY,CAAC;EAEpD,OAAOC,QAAQ,GAAG,IAAI,GACpBX,KAAA,CAAAkB,aAAA,CAACd,cAAc,EAAAe,QAAA;IAACC,EAAE,EAAC,OAAO;IAACJ,WAAW,EAAEA,WAAY;IAACC,GAAG,EAAEA;EAAI,GAAKJ,KAAK,GACrED,QACa,CACjB;AACH,CACF,CAAC;AAEDJ,WAAW,CAACa,WAAW,GAAG,aAAa;AAEvC,OAAO,MAAMC,KAAK,GAAGnB,MAAM,CAACK,WAAW,CAAC,CACrCe,UAAU,CAAa;EACtBrB,iBAAiB,EAAEsB,IAAI,IAAIA,IAAI,KAAK,UAAU,IAAItB,iBAAiB,CAACsB,IAAI,CAAC;EAAAH,WAAA;EAAAI,WAAA;AAC3E,CAAC,CAAC,CACDC,KAAK,CAAa,CAAC;EAAEC,KAAK,EAALA,MAAK,GAAG;AAAU,CAAC,MAAM;EAC7CA,KAAK,EAALA;AACF,CAAC,CAAC,CAAC,CAAAC,EAAA,KAAAA,EAAA,GAAAC,CAAa;AAClB,GAAkB;AAClB;AACA,YAAU,CAAuB;AACjC,aAAW,CAAuB;AAClC,aAAW,CAAuB;AAClC;AACA;AACA,GAA+D;AAC/D;AACA,GAAa,KATXvB,eAAe,EAEL,CAAC;EAAEqB;AAAM,CAAC,KAAKA,KAAK,EACnB,CAAC;EAAEA;AAAM,CAAC,KAAKA,KAAK,EACpB,CAAC;EAAEA;AAAM,CAAC,KAAKA,KAAK,EAG/B,CAAC;EAAEG;AAAa,CAAC,KAAKA,YAAY,IAAI,sBAAsB,EAE5DvB,UAAU,CAAE"}