"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RouteChangeListener = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRouterDom = require("react-router-dom");
var _clone = _interopRequireDefault(require("lodash/clone"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var RouteChangeListener = _ref => {
  var {
    onPathnameChange,
    onRouteChange,
    extensionHost,
    hostRoute,
    hostRouteState
  } = _ref;
  var history = (0, _reactRouterDom.useHistory)();
  var location = (0, _reactRouterDom.useLocation)();
  (0, _react.useEffect)(() => {
    if (onPathnameChange) {
      onPathnameChange(location.pathname);
    }
    if (onRouteChange) {
      onRouteChange(location.pathname + location.search, (0, _clone.default)(location.state));
    }
    extensionHost.clientRouteChanged(location.pathname + location.search, location.state);
  }, [location]);
  (0, _react.useEffect)(() => {
    if (hostRoute) {
      history.push(hostRoute, hostRouteState);
    }
  }, [hostRoute]);
  return _react.default.createElement(_react.default.Fragment, null);
};
exports.RouteChangeListener = RouteChangeListener;
//# sourceMappingURL=RouteChangeListener.js.map