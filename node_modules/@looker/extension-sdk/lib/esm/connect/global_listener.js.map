{"version":3,"file":"global_listener.js","names":["logError","logWarn","_hostApi","errorListener","event","error","_looker_reported","beforeUnloadListener","unloaded","setupGlobalListeners","window","addEventListener","registerHostApi","hostApi","getExtensionSDK","lookerHostData","Error"],"sources":["../../../src/connect/global_listener.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport { logError, logWarn } from '../util';\nimport type { ExtensionHostApi, ExtensionSDK } from './types';\n\nlet _hostApi: ExtensionHostApi | undefined;\n\nconst errorListener = (event: ErrorEvent) => {\n  if (_hostApi) {\n    // in development mode errors get reported twice. Suspect react\n    // development code re-reporting the error. Before error reporting\n    // was working correctly in sandboxed iframe there were two distinct\n    // errors on two separate events. After the fix the same error is\n    // reported twice on two events. A \"looker\" property is set on the\n    // error object. The second time the listener is called, the error\n    // is ignored as it has already been reported.\n    if (event.error) {\n      if (!event.error._looker_reported) {\n        _hostApi.error(event);\n        event.error._looker_reported = true;\n      }\n    } else {\n      _hostApi.error(event);\n    }\n  } else {\n    logError(\n      'Extension has unhandled error. Reporting on console as Looker host api not initialized',\n      event\n    );\n  }\n};\n\n/**\n * Listen for unload events and send message to host.\n * Host will reload the extension. Stops new pages being\n * loaded using form submission.\n */\nconst beforeUnloadListener = () => {\n  if (_hostApi) {\n    _hostApi.unloaded();\n    logWarn('Extension is being unloaded');\n  }\n};\n\nconst setupGlobalListeners = () => {\n  window.addEventListener('error', errorListener);\n  window.addEventListener('beforeunload', beforeUnloadListener);\n};\n\nsetupGlobalListeners();\n\n/**\n * Register the api with the error listener.\n */\nexport const registerHostApi = (hostApi: ExtensionHostApi) => {\n  _hostApi = hostApi;\n};\n\n/**\n * Static reference to extension SDK.\n * Will throw an error if the extensionSDK has not been initialized\n */\nexport const getExtensionSDK = (): ExtensionSDK => {\n  if (_hostApi && _hostApi.lookerHostData) {\n    return _hostApi;\n  }\n  throw new Error('ExtensionSDK not initialized');\n};\n"],"mappings":"AA0BA,SAASA,QAAQ,EAAEC,OAAO,QAAQ,SAAS;AAG3C,IAAIC,QAAsC;AAE1C,IAAMC,aAAa,GAAIC,KAAiB,IAAK;EAC3C,IAAIF,QAAQ,EAAE;IAQZ,IAAIE,KAAK,CAACC,KAAK,EAAE;MACf,IAAI,CAACD,KAAK,CAACC,KAAK,CAACC,gBAAgB,EAAE;QACjCJ,QAAQ,CAACG,KAAK,CAACD,KAAK,CAAC;QACrBA,KAAK,CAACC,KAAK,CAACC,gBAAgB,GAAG,IAAI;MACrC;IACF,CAAC,MAAM;MACLJ,QAAQ,CAACG,KAAK,CAACD,KAAK,CAAC;IACvB;EACF,CAAC,MAAM;IACLJ,QAAQ,CACN,wFAAwF,EACxFI,KACF,CAAC;EACH;AACF,CAAC;AAOD,IAAMG,oBAAoB,GAAGA,CAAA,KAAM;EACjC,IAAIL,QAAQ,EAAE;IACZA,QAAQ,CAACM,QAAQ,CAAC,CAAC;IACnBP,OAAO,CAAC,6BAA6B,CAAC;EACxC;AACF,CAAC;AAED,IAAMQ,oBAAoB,GAAGA,CAAA,KAAM;EACjCC,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAER,aAAa,CAAC;EAC/CO,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAEJ,oBAAoB,CAAC;AAC/D,CAAC;AAEDE,oBAAoB,CAAC,CAAC;AAKtB,OAAO,IAAMG,eAAe,GAAIC,OAAyB,IAAK;EAC5DX,QAAQ,GAAGW,OAAO;AACpB,CAAC;AAMD,OAAO,IAAMC,eAAe,GAAGA,CAAA,KAAoB;EACjD,IAAIZ,QAAQ,IAAIA,QAAQ,CAACa,cAAc,EAAE;IACvC,OAAOb,QAAQ;EACjB;EACA,MAAM,IAAIc,KAAK,CAAC,8BAA8B,CAAC;AACjD,CAAC"}