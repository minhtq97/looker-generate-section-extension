{"version":3,"file":"FontFaceLoader.js","names":["_react","_interopRequireWildcard","require","_reactHelmetAsync","_styledComponents","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","fontFacesCSS","fontSources","map","_ref","face","url","fontFace","importFont","join","exports","concat","FontFaceLoader","_useTheme","useTheme","css","useMemo","length","createElement","Helmet","type"],"sources":["../../../src/FontFaceLoader/FontFaceLoader.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useMemo } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useTheme } from 'styled-components';\nimport type { FontSources } from '@looker/design-tokens';\n\nexport const fontFacesCSS = (fontSources: FontSources) =>\n  fontSources\n    .map(({ face, url }) => (face ? fontFace(face, url) : importFont(url)))\n    .join('\\n');\n\nexport const importFont = (url: string) => `\n@import url(${url});`;\n\nexport const fontFace = (face: string, url: string) => `\n@font-face {\n  font-family: ${face};\n  src: url('${url}');\n}`;\n\n/**\n * FontFaceLoader injects font @font-face imports into a style tag on the page's <HEAD>\n * Font sources are determined using the fontSources key on the theme\n */\nexport const FontFaceLoader = () => {\n  const { fontSources } = useTheme();\n\n  const css = useMemo(() => {\n    if (fontSources && fontSources.length > 0) {\n      return fontFacesCSS(fontSources);\n    } else {\n      return null;\n    }\n  }, [fontSources]);\n\n  return css === null ? null : (\n    <Helmet>\n      <style type=\"text/css\">{css}</style>\n    </Helmet>\n  );\n};\n"],"mappings":";;;;;;;AAKA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,iBAAA,GAAAD,OAAA;AACA,IAAAE,iBAAA,GAAAF,OAAA;AAA6C,SAAAG,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAL,wBAAAS,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,aAAAE,OAAA,CAAAF,GAAA,yBAAAA,GAAA,uCAAAA,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,cAAAN,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAGtC,IAAMW,YAAY,GAAG,SAAfA,YAAYA,CAAIC,WAAwB;EAAA,OACnDA,WAAW,CACRC,GAAG,CAAC,UAAAC,IAAA;IAAA,IAAGC,IAAI,GAAAD,IAAA,CAAJC,IAAI;MAAEC,GAAG,GAAAF,IAAA,CAAHE,GAAG;IAAA,OAAQD,IAAI,GAAGE,QAAQ,CAACF,IAAI,EAAEC,GAAG,CAAC,GAAGE,UAAU,CAACF,GAAG,CAAC;EAAA,CAAC,CAAC,CACtEG,IAAI,CAAC,IAAI,CAAC;AAAA;AAACC,OAAA,CAAAT,YAAA,GAAAA,YAAA;AAET,IAAMO,UAAU,GAAG,SAAbA,UAAUA,CAAIF,GAAW;EAAA,wBAAAK,MAAA,CACxBL,GAAG;AAAA,CAAI;AAACI,OAAA,CAAAF,UAAA,GAAAA,UAAA;AAEf,IAAMD,QAAQ,GAAG,SAAXA,QAAQA,CAAIF,IAAY,EAAEC,GAAW;EAAA,yCAAAK,MAAA,CAEjCN,IAAI,qBAAAM,MAAA,CACPL,GAAG;AAAA,CACf;AAACI,OAAA,CAAAH,QAAA,GAAAA,QAAA;AAMI,IAAMK,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAClC,IAAAC,SAAA,GAAwB,IAAAC,0BAAQ,EAAC,CAAC;IAA1BZ,WAAW,GAAAW,SAAA,CAAXX,WAAW;EAEnB,IAAMa,GAAG,GAAG,IAAAC,cAAO,EAAC,YAAM;IACxB,IAAId,WAAW,IAAIA,WAAW,CAACe,MAAM,GAAG,CAAC,EAAE;MACzC,OAAOhB,YAAY,CAACC,WAAW,CAAC;IAClC,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,OAAOa,GAAG,KAAK,IAAI,GAAG,IAAI,GACxBzC,MAAA,YAAA4C,aAAA,CAACzC,iBAAA,CAAA0C,MAAM,QACL7C,MAAA,YAAA4C,aAAA;IAAOE,IAAI,EAAC;EAAU,GAAEL,GAAW,CAC7B,CACT;AACH,CAAC;AAACL,OAAA,CAAAE,cAAA,GAAAA,cAAA"}